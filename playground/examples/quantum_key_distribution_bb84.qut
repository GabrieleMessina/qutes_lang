//Alice create a random binary sequence
qubit[] original_message = [0q, 0q, 0q, 0q, 0q, 0q, 0q, 0q];
qubit[] message = [0q, 0q, 0q, 0q, 0q, 0q, 0q, 0q];

//Alice create a random binary sequence of basis
string[] alice_bases = ["1","1","0","0","0","1","1","1"];

//Alice encodes the message with the basis
//for each character in message, if the corresponding character in bases is 0, then encode the character in Z basis, otherwise in X basis
foreach base, index in alice_bases{
    if(base == "0"){
        //encode message in Z basis
        //do nothing
    } else {
        //encode message in X basis
        hadamard message[index];
    }
}

// -----> Alice sends the encoded message to Bob
// <----- Bob receives the encoded message from Alice


//Bob create a random binary sequence of basis
string[] bob_bases = ["1","0","1","0","1","0","1","0"];

foreach base, index in bob_bases{
    if(base == "0"){
        //encode message in Z basis
        //do nothing
    } else {
        //encode message in X basis
        hadamard message[index];
    }
}


// <----> Alice and Bob reveal their bases to each other

//Alice and Bob compare their bases and discard the bits where their bases do not match
foreach base, index in bob_bases{
    if(alice_bases[index] == base){
        print "Index match so it can be used to create a key, index: ";
        print index;
        print " that correspond to this original message: ";
        print original_message[index];
        println;
    }
}

measure;

print "If the above values matches, then no one is eyesdropping.";