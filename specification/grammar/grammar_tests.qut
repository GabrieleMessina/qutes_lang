/*{
    bool a = true;
    bool b = FALSE;
    bool c = 1;
    bool d = 0;
}*/


/*{
    int a=2+3;
    int i=1;
    int x=0xa1;//TODO:handle
    int h=0b01;//TODO:handle
    a;
    i=i+i;
    //2+"a"; //this gives an error and that it's as intended, it's how the lower level language handle this kind of operation between two types.
}*/

/*{
    string a;
    string b = "aa";
    string c = "aa\"" + "as";
    int d = 12+16543;
    int e = 12-16543;
    int f = false + false;
    //int b.b = 1; //this gives error, because variable cannot be declared with qualified names (at least at the moment)
    //b = 4; //this gives an error, wrong type assignment and no conversion available.
    //g = 4; //this gives an error, g is not declared.
}*/

//if(1){ int a=100; }
//{ ; }
//{ }
//qubit b;
// float a = 1.1;
//{ int i=1; while (i<100) i=i+i; } //TODO: handle cycle
// qubit q = [0, 1]q;//TODO: error mismatched input 'q' expecting SYMBOL_LITERAL

{
    //alpha and beta values
    qubit a = 0.7,0.3q;
    //states we want the qubit is able to take
    qubit b = [0, 1]q; 
    //qubits with only a state 
    qubit c = [1]q; 
    qubit ad = 0q;
    qubit ae = 1q;
    qubit bd = -0q;
    qubit be = +1q;
    be = -1q;
    //qubits in superposition 
    qubit f = +q;
    qubit g = -q;
    // qubit h = f + g; //TODO: handle qubit sum
}

{
    quint a = [0q, 0q, 1q];
    quint b = [[0, 1]q, 0q, 1q];
    quint c = 12q;
    quint d = -12q;
    //quint e = c + d; //TODO: handle quint sum
}
