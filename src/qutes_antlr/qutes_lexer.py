# Generated from /workspaces/qutes_lang/specification/grammar/qutes_lexer.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,64,587,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,1,0,1,0,1,0,1,0,
        1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,
        1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,
        1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,
        1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,13,
        1,13,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,
        1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,
        1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,21,
        1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,
        1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,
        1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,
        1,27,1,27,1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,31,1,31,1,31,1,32,
        1,32,1,33,1,33,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,36,1,36,
        1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,
        1,38,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,
        1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,
        1,47,1,47,1,48,1,48,1,49,1,49,1,50,1,50,1,51,1,51,1,52,1,52,1,52,
        1,52,5,52,365,8,52,10,52,12,52,368,9,52,1,52,1,52,1,52,1,52,1,52,
        1,52,5,52,376,8,52,10,52,12,52,379,9,52,3,52,381,8,52,1,53,1,53,
        1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,56,1,56,
        1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,3,57,
        410,8,57,1,58,1,58,1,58,3,58,415,8,58,1,59,4,59,418,8,59,11,59,12,
        59,419,1,60,3,60,423,8,60,1,60,4,60,426,8,60,11,60,12,60,427,1,60,
        1,60,5,60,432,8,60,10,60,12,60,435,9,60,1,60,3,60,438,8,60,1,60,
        1,60,4,60,442,8,60,11,60,12,60,443,3,60,446,8,60,1,61,1,61,1,61,
        1,61,4,61,452,8,61,11,61,12,61,453,1,62,1,62,1,62,4,62,459,8,62,
        11,62,12,62,460,1,63,1,63,1,63,3,63,466,8,63,1,63,1,63,5,63,470,
        8,63,10,63,12,63,473,9,63,1,63,1,63,3,63,477,8,63,3,63,479,8,63,
        1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,3,63,491,8,63,
        1,63,1,63,3,63,495,8,63,1,63,3,63,498,8,63,1,64,1,64,1,64,1,64,1,
        64,5,64,505,8,64,10,64,12,64,508,9,64,1,64,1,64,5,64,512,8,64,10,
        64,12,64,515,9,64,1,64,1,64,1,64,1,64,1,64,1,64,5,64,523,8,64,10,
        64,12,64,526,9,64,1,64,1,64,5,64,530,8,64,10,64,12,64,533,9,64,1,
        64,1,64,1,64,1,64,3,64,539,8,64,1,64,4,64,542,8,64,11,64,12,64,543,
        1,64,1,64,3,64,548,8,64,1,65,1,65,1,65,1,66,1,66,5,66,555,8,66,10,
        66,12,66,558,9,66,1,67,1,67,1,67,1,67,1,67,1,67,5,67,566,8,67,10,
        67,12,67,569,9,67,1,67,1,67,1,68,4,68,574,8,68,11,68,12,68,575,1,
        68,3,68,579,8,68,1,68,1,68,1,69,3,69,584,8,69,1,69,1,69,1,366,0,
        70,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
        13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,
        24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,
        35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,
        46,93,47,95,48,97,49,99,50,101,51,103,52,105,0,107,0,109,0,111,0,
        113,0,115,0,117,53,119,54,121,55,123,56,125,57,127,58,129,59,131,
        60,133,61,135,62,137,63,139,64,1,0,33,2,0,73,73,105,105,2,0,78,78,
        110,110,2,0,84,84,116,116,2,0,66,66,98,98,2,0,79,79,111,111,2,0,
        76,76,108,108,2,0,83,83,115,115,2,0,82,82,114,114,2,0,71,71,103,
        103,2,0,81,81,113,113,2,0,85,85,117,117,2,0,70,70,102,102,2,0,65,
        65,97,97,2,0,86,86,118,118,2,0,68,68,100,100,2,0,69,69,101,101,2,
        0,89,89,121,121,2,0,87,87,119,119,2,0,80,80,112,112,2,0,90,90,122,
        122,2,0,77,77,109,109,2,0,67,67,99,99,2,0,88,88,120,120,2,0,72,72,
        104,104,2,0,10,10,13,13,1,0,48,57,2,0,43,43,45,45,2,0,65,70,97,102,
        1,0,48,49,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,2,
        0,34,34,92,92,3,0,9,10,13,13,32,32,623,0,1,1,0,0,0,0,3,1,0,0,0,0,
        5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,
        1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,
        1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,
        1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,
        1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,
        1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,
        1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,
        1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,
        1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,
        1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,
        117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,
        0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,
        1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,1,141,1,0,0,0,3,145,1,0,0,0,
        5,150,1,0,0,0,7,157,1,0,0,0,9,163,1,0,0,0,11,169,1,0,0,0,13,178,
        1,0,0,0,15,184,1,0,0,0,17,189,1,0,0,0,19,196,1,0,0,0,21,198,1,0,
        0,0,23,200,1,0,0,0,25,202,1,0,0,0,27,204,1,0,0,0,29,208,1,0,0,0,
        31,211,1,0,0,0,33,216,1,0,0,0,35,223,1,0,0,0,37,230,1,0,0,0,39,237,
        1,0,0,0,41,241,1,0,0,0,43,245,1,0,0,0,45,249,1,0,0,0,47,253,1,0,
        0,0,49,262,1,0,0,0,51,270,1,0,0,0,53,276,1,0,0,0,55,284,1,0,0,0,
        57,287,1,0,0,0,59,289,1,0,0,0,61,292,1,0,0,0,63,294,1,0,0,0,65,297,
        1,0,0,0,67,299,1,0,0,0,69,301,1,0,0,0,71,305,1,0,0,0,73,309,1,0,
        0,0,75,316,1,0,0,0,77,319,1,0,0,0,79,325,1,0,0,0,81,328,1,0,0,0,
        83,333,1,0,0,0,85,339,1,0,0,0,87,342,1,0,0,0,89,344,1,0,0,0,91,346,
        1,0,0,0,93,348,1,0,0,0,95,350,1,0,0,0,97,352,1,0,0,0,99,354,1,0,
        0,0,101,356,1,0,0,0,103,358,1,0,0,0,105,380,1,0,0,0,107,382,1,0,
        0,0,109,387,1,0,0,0,111,393,1,0,0,0,113,395,1,0,0,0,115,409,1,0,
        0,0,117,414,1,0,0,0,119,417,1,0,0,0,121,445,1,0,0,0,123,447,1,0,
        0,0,125,455,1,0,0,0,127,497,1,0,0,0,129,547,1,0,0,0,131,549,1,0,
        0,0,133,552,1,0,0,0,135,559,1,0,0,0,137,578,1,0,0,0,139,583,1,0,
        0,0,141,142,7,0,0,0,142,143,7,1,0,0,143,144,7,2,0,0,144,2,1,0,0,
        0,145,146,7,3,0,0,146,147,7,4,0,0,147,148,7,4,0,0,148,149,7,5,0,
        0,149,4,1,0,0,0,150,151,7,6,0,0,151,152,7,2,0,0,152,153,7,7,0,0,
        153,154,7,0,0,0,154,155,7,1,0,0,155,156,7,8,0,0,156,6,1,0,0,0,157,
        158,7,9,0,0,158,159,7,10,0,0,159,160,7,3,0,0,160,161,7,0,0,0,161,
        162,7,2,0,0,162,8,1,0,0,0,163,164,7,9,0,0,164,165,7,10,0,0,165,166,
        7,0,0,0,166,167,7,1,0,0,167,168,7,2,0,0,168,10,1,0,0,0,169,170,7,
        9,0,0,170,171,7,10,0,0,171,172,7,6,0,0,172,173,7,2,0,0,173,174,7,
        7,0,0,174,175,7,0,0,0,175,176,7,1,0,0,176,177,7,8,0,0,177,12,1,0,
        0,0,178,179,7,11,0,0,179,180,7,5,0,0,180,181,7,4,0,0,181,182,7,12,
        0,0,182,183,7,2,0,0,183,14,1,0,0,0,184,185,7,13,0,0,185,186,7,4,
        0,0,186,187,7,0,0,0,187,188,7,14,0,0,188,16,1,0,0,0,189,190,7,7,
        0,0,190,191,7,15,0,0,191,192,7,2,0,0,192,193,7,10,0,0,193,194,7,
        7,0,0,194,195,7,1,0,0,195,18,1,0,0,0,196,197,5,42,0,0,197,20,1,0,
        0,0,198,199,5,47,0,0,199,22,1,0,0,0,200,201,5,43,0,0,201,24,1,0,
        0,0,202,203,5,45,0,0,203,26,1,0,0,0,204,205,7,1,0,0,205,206,7,4,
        0,0,206,207,7,2,0,0,207,28,1,0,0,0,208,209,7,3,0,0,209,210,7,16,
        0,0,210,30,1,0,0,0,211,212,7,6,0,0,212,213,7,17,0,0,213,214,7,12,
        0,0,214,215,7,18,0,0,215,32,1,0,0,0,216,217,7,18,0,0,217,218,7,12,
        0,0,218,219,7,10,0,0,219,220,7,5,0,0,220,221,7,0,0,0,221,222,7,16,
        0,0,222,34,1,0,0,0,223,224,7,18,0,0,224,225,7,12,0,0,225,226,7,10,
        0,0,226,227,7,5,0,0,227,228,7,0,0,0,228,229,7,19,0,0,229,36,1,0,
        0,0,230,231,7,8,0,0,231,232,7,7,0,0,232,233,7,4,0,0,233,234,7,13,
        0,0,234,235,7,15,0,0,235,236,7,7,0,0,236,38,1,0,0,0,237,238,7,20,
        0,0,238,239,7,21,0,0,239,240,7,19,0,0,240,40,1,0,0,0,241,242,7,20,
        0,0,242,243,7,21,0,0,243,244,7,22,0,0,244,42,1,0,0,0,245,246,7,20,
        0,0,246,247,7,21,0,0,247,248,7,16,0,0,248,44,1,0,0,0,249,250,7,20,
        0,0,250,251,7,21,0,0,251,252,7,18,0,0,252,46,1,0,0,0,253,254,7,23,
        0,0,254,255,7,12,0,0,255,256,7,14,0,0,256,257,7,12,0,0,257,258,7,
        20,0,0,258,259,7,12,0,0,259,260,7,7,0,0,260,261,7,14,0,0,261,48,
        1,0,0,0,262,263,7,20,0,0,263,264,7,15,0,0,264,265,7,12,0,0,265,266,
        7,6,0,0,266,267,7,10,0,0,267,268,7,7,0,0,268,269,7,15,0,0,269,50,
        1,0,0,0,270,271,7,18,0,0,271,272,7,7,0,0,272,273,7,0,0,0,273,274,
        7,1,0,0,274,275,7,2,0,0,275,52,1,0,0,0,276,277,7,3,0,0,277,278,7,
        12,0,0,278,279,7,7,0,0,279,280,7,7,0,0,280,281,7,0,0,0,281,282,7,
        15,0,0,282,283,7,7,0,0,283,54,1,0,0,0,284,285,5,61,0,0,285,286,5,
        61,0,0,286,56,1,0,0,0,287,288,5,62,0,0,288,58,1,0,0,0,289,290,5,
        62,0,0,290,291,5,61,0,0,291,60,1,0,0,0,292,293,5,60,0,0,293,62,1,
        0,0,0,294,295,5,60,0,0,295,296,5,61,0,0,296,64,1,0,0,0,297,298,5,
        61,0,0,298,66,1,0,0,0,299,300,5,59,0,0,300,68,1,0,0,0,301,302,7,
        13,0,0,302,303,7,12,0,0,303,304,7,7,0,0,304,70,1,0,0,0,305,306,7,
        11,0,0,306,307,7,4,0,0,307,308,7,7,0,0,308,72,1,0,0,0,309,310,7,
        6,0,0,310,311,7,15,0,0,311,312,7,12,0,0,312,313,7,7,0,0,313,314,
        7,21,0,0,314,315,7,23,0,0,315,74,1,0,0,0,316,317,7,0,0,0,317,318,
        7,1,0,0,318,76,1,0,0,0,319,320,7,17,0,0,320,321,7,23,0,0,321,322,
        7,15,0,0,322,323,7,7,0,0,323,324,7,15,0,0,324,78,1,0,0,0,325,326,
        7,0,0,0,326,327,7,11,0,0,327,80,1,0,0,0,328,329,7,15,0,0,329,330,
        7,5,0,0,330,331,7,6,0,0,331,332,7,15,0,0,332,82,1,0,0,0,333,334,
        7,17,0,0,334,335,7,23,0,0,335,336,7,0,0,0,336,337,7,5,0,0,337,338,
        7,15,0,0,338,84,1,0,0,0,339,340,7,14,0,0,340,341,7,4,0,0,341,86,
        1,0,0,0,342,343,5,123,0,0,343,88,1,0,0,0,344,345,5,125,0,0,345,90,
        1,0,0,0,346,347,5,40,0,0,347,92,1,0,0,0,348,349,5,41,0,0,349,94,
        1,0,0,0,350,351,5,91,0,0,351,96,1,0,0,0,352,353,5,93,0,0,353,98,
        1,0,0,0,354,355,5,46,0,0,355,100,1,0,0,0,356,357,5,34,0,0,357,102,
        1,0,0,0,358,359,5,44,0,0,359,104,1,0,0,0,360,361,5,47,0,0,361,362,
        5,42,0,0,362,366,1,0,0,0,363,365,9,0,0,0,364,363,1,0,0,0,365,368,
        1,0,0,0,366,367,1,0,0,0,366,364,1,0,0,0,367,369,1,0,0,0,368,366,
        1,0,0,0,369,370,5,42,0,0,370,381,5,47,0,0,371,372,5,47,0,0,372,373,
        5,47,0,0,373,377,1,0,0,0,374,376,8,24,0,0,375,374,1,0,0,0,376,379,
        1,0,0,0,377,375,1,0,0,0,377,378,1,0,0,0,378,381,1,0,0,0,379,377,
        1,0,0,0,380,360,1,0,0,0,380,371,1,0,0,0,381,106,1,0,0,0,382,383,
        7,2,0,0,383,384,7,7,0,0,384,385,7,10,0,0,385,386,7,15,0,0,386,108,
        1,0,0,0,387,388,7,11,0,0,388,389,7,12,0,0,389,390,7,5,0,0,390,391,
        7,6,0,0,391,392,7,15,0,0,392,110,1,0,0,0,393,394,7,25,0,0,394,112,
        1,0,0,0,395,396,7,26,0,0,396,114,1,0,0,0,397,398,5,124,0,0,398,399,
        5,48,0,0,399,410,5,62,0,0,400,401,5,124,0,0,401,402,5,49,0,0,402,
        410,5,62,0,0,403,404,5,124,0,0,404,405,5,43,0,0,405,410,5,62,0,0,
        406,407,5,124,0,0,407,408,5,45,0,0,408,410,5,62,0,0,409,397,1,0,
        0,0,409,400,1,0,0,0,409,403,1,0,0,0,409,406,1,0,0,0,410,116,1,0,
        0,0,411,415,3,107,53,0,412,415,3,109,54,0,413,415,2,48,49,0,414,
        411,1,0,0,0,414,412,1,0,0,0,414,413,1,0,0,0,415,118,1,0,0,0,416,
        418,3,111,55,0,417,416,1,0,0,0,418,419,1,0,0,0,419,417,1,0,0,0,419,
        420,1,0,0,0,420,120,1,0,0,0,421,423,3,113,56,0,422,421,1,0,0,0,422,
        423,1,0,0,0,423,425,1,0,0,0,424,426,3,111,55,0,425,424,1,0,0,0,426,
        427,1,0,0,0,427,425,1,0,0,0,427,428,1,0,0,0,428,429,1,0,0,0,429,
        433,5,46,0,0,430,432,3,111,55,0,431,430,1,0,0,0,432,435,1,0,0,0,
        433,431,1,0,0,0,433,434,1,0,0,0,434,446,1,0,0,0,435,433,1,0,0,0,
        436,438,3,113,56,0,437,436,1,0,0,0,437,438,1,0,0,0,438,439,1,0,0,
        0,439,441,5,46,0,0,440,442,3,111,55,0,441,440,1,0,0,0,442,443,1,
        0,0,0,443,441,1,0,0,0,443,444,1,0,0,0,444,446,1,0,0,0,445,422,1,
        0,0,0,445,437,1,0,0,0,446,122,1,0,0,0,447,448,5,48,0,0,448,451,7,
        22,0,0,449,452,7,27,0,0,450,452,3,111,55,0,451,449,1,0,0,0,451,450,
        1,0,0,0,452,453,1,0,0,0,453,451,1,0,0,0,453,454,1,0,0,0,454,124,
        1,0,0,0,455,456,5,48,0,0,456,458,7,3,0,0,457,459,7,28,0,0,458,457,
        1,0,0,0,459,460,1,0,0,0,460,458,1,0,0,0,460,461,1,0,0,0,461,126,
        1,0,0,0,462,465,3,95,47,0,463,466,3,117,58,0,464,466,2,48,49,0,465,
        463,1,0,0,0,465,464,1,0,0,0,466,478,1,0,0,0,467,471,3,103,51,0,468,
        470,5,32,0,0,469,468,1,0,0,0,470,473,1,0,0,0,471,469,1,0,0,0,471,
        472,1,0,0,0,472,476,1,0,0,0,473,471,1,0,0,0,474,477,3,117,58,0,475,
        477,2,48,49,0,476,474,1,0,0,0,476,475,1,0,0,0,477,479,1,0,0,0,478,
        467,1,0,0,0,478,479,1,0,0,0,479,480,1,0,0,0,480,481,3,97,48,0,481,
        482,7,9,0,0,482,498,1,0,0,0,483,484,3,121,60,0,484,485,3,103,51,
        0,485,486,3,121,60,0,486,487,7,9,0,0,487,498,1,0,0,0,488,498,3,115,
        57,0,489,491,3,113,56,0,490,489,1,0,0,0,490,491,1,0,0,0,491,494,
        1,0,0,0,492,495,3,117,58,0,493,495,2,48,49,0,494,492,1,0,0,0,494,
        493,1,0,0,0,495,496,1,0,0,0,496,498,7,9,0,0,497,462,1,0,0,0,497,
        483,1,0,0,0,497,488,1,0,0,0,497,490,1,0,0,0,498,128,1,0,0,0,499,
        548,3,127,63,0,500,501,3,95,47,0,501,513,3,127,63,0,502,506,3,103,
        51,0,503,505,5,32,0,0,504,503,1,0,0,0,505,508,1,0,0,0,506,504,1,
        0,0,0,506,507,1,0,0,0,507,509,1,0,0,0,508,506,1,0,0,0,509,510,3,
        127,63,0,510,512,1,0,0,0,511,502,1,0,0,0,512,515,1,0,0,0,513,511,
        1,0,0,0,513,514,1,0,0,0,514,516,1,0,0,0,515,513,1,0,0,0,516,517,
        3,97,48,0,517,548,1,0,0,0,518,519,3,95,47,0,519,531,3,119,59,0,520,
        524,3,103,51,0,521,523,5,32,0,0,522,521,1,0,0,0,523,526,1,0,0,0,
        524,522,1,0,0,0,524,525,1,0,0,0,525,527,1,0,0,0,526,524,1,0,0,0,
        527,528,3,119,59,0,528,530,1,0,0,0,529,520,1,0,0,0,530,533,1,0,0,
        0,531,529,1,0,0,0,531,532,1,0,0,0,532,534,1,0,0,0,533,531,1,0,0,
        0,534,535,3,97,48,0,535,536,7,9,0,0,536,548,1,0,0,0,537,539,3,113,
        56,0,538,537,1,0,0,0,538,539,1,0,0,0,539,541,1,0,0,0,540,542,3,111,
        55,0,541,540,1,0,0,0,542,543,1,0,0,0,543,541,1,0,0,0,543,544,1,0,
        0,0,544,545,1,0,0,0,545,546,7,9,0,0,546,548,1,0,0,0,547,499,1,0,
        0,0,547,500,1,0,0,0,547,518,1,0,0,0,547,538,1,0,0,0,548,130,1,0,
        0,0,549,550,3,135,67,0,550,551,7,9,0,0,551,132,1,0,0,0,552,556,7,
        29,0,0,553,555,7,30,0,0,554,553,1,0,0,0,555,558,1,0,0,0,556,554,
        1,0,0,0,556,557,1,0,0,0,557,134,1,0,0,0,558,556,1,0,0,0,559,567,
        5,34,0,0,560,561,5,92,0,0,561,566,9,0,0,0,562,563,5,34,0,0,563,566,
        5,34,0,0,564,566,8,31,0,0,565,560,1,0,0,0,565,562,1,0,0,0,565,564,
        1,0,0,0,566,569,1,0,0,0,567,565,1,0,0,0,567,568,1,0,0,0,568,570,
        1,0,0,0,569,567,1,0,0,0,570,571,5,34,0,0,571,136,1,0,0,0,572,574,
        7,32,0,0,573,572,1,0,0,0,574,575,1,0,0,0,575,573,1,0,0,0,575,576,
        1,0,0,0,576,579,1,0,0,0,577,579,3,105,52,0,578,573,1,0,0,0,578,577,
        1,0,0,0,579,580,1,0,0,0,580,581,6,68,0,0,581,138,1,0,0,0,582,584,
        5,13,0,0,583,582,1,0,0,0,583,584,1,0,0,0,584,585,1,0,0,0,585,586,
        5,10,0,0,586,140,1,0,0,0,36,0,366,377,380,409,414,419,422,427,433,
        437,443,445,451,453,460,465,471,476,478,490,494,497,506,513,524,
        531,538,543,547,556,565,567,575,578,583,1,6,0,0
    ]

class qutes_lexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    INT_TYPE = 1
    BOOL_TYPE = 2
    STRING_TYPE = 3
    QUBIT_TYPE = 4
    QUINT_TYPE = 5
    QUSTRING_TYPE = 6
    FLOAT_TYPE = 7
    VOID_TYPE = 8
    RETURN = 9
    MULTIPLY = 10
    DIVIDE = 11
    ADD = 12
    SUB = 13
    NOT = 14
    BY = 15
    SWAP = 16
    PAULIY = 17
    PAULIZ = 18
    GROVER = 19
    MCZ = 20
    MCX = 21
    MCY = 22
    MCP = 23
    HADAMARD = 24
    MEASURE = 25
    PRINT = 26
    BARRIER = 27
    EQUAL = 28
    GREATER = 29
    GREATEREQUAL = 30
    LOWER = 31
    LOWEREQUAL = 32
    ASSIGN = 33
    END_OF_STATEMENT = 34
    VAR_STATEMENT = 35
    FOR_STATEMENT = 36
    SEARCH_STATEMENT = 37
    IN_STATEMENT = 38
    WHERE_STATEMENT = 39
    IF_STATEMENT = 40
    ELSE_STATEMENT = 41
    WHILE_STATEMENT = 42
    DO_STATEMENT = 43
    CURLY_PARENTHESIS_OPEN = 44
    CURLY_PARENTHESIS_CLOSE = 45
    ROUND_PARENTHESIS_OPEN = 46
    ROUND_PARENTHESIS_CLOSE = 47
    SQUARE_PARENTHESIS_OPEN = 48
    SQUARE_PARENTHESIS_CLOSE = 49
    DOT = 50
    STRING_ENCLOSURE = 51
    COMMA = 52
    BOOL_LITERAL = 53
    INT_LITERAL = 54
    FLOAT_LITERAL = 55
    HEX_LITERAL = 56
    BIN_LITERAL = 57
    QUBIT_LITERAL = 58
    QUINT_LITERAL = 59
    QUSTRING_LITERAL = 60
    SYMBOL_LITERAL = 61
    STRING_LITERAL = 62
    WS = 63
    NEWLINE = 64

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'int'", "'bool'", "'string'", "'qubit'", "'quint'", "'qustring'", 
            "'float'", "'void'", "'return'", "'*'", "'/'", "'+'", "'-'", 
            "'not'", "'by'", "'swap'", "'pauliy'", "'pauliz'", "'grover'", 
            "'mcz'", "'mcx'", "'mcy'", "'mcp'", "'hadamard'", "'measure'", 
            "'print'", "'barrier'", "'=='", "'>'", "'>='", "'<'", "'<='", 
            "'='", "';'", "'var'", "'for'", "'search'", "'in'", "'where'", 
            "'if'", "'else'", "'while'", "'do'", "'{'", "'}'", "'('", "')'", 
            "'['", "']'", "'.'", "'\"'", "','" ]

    symbolicNames = [ "<INVALID>",
            "INT_TYPE", "BOOL_TYPE", "STRING_TYPE", "QUBIT_TYPE", "QUINT_TYPE", 
            "QUSTRING_TYPE", "FLOAT_TYPE", "VOID_TYPE", "RETURN", "MULTIPLY", 
            "DIVIDE", "ADD", "SUB", "NOT", "BY", "SWAP", "PAULIY", "PAULIZ", 
            "GROVER", "MCZ", "MCX", "MCY", "MCP", "HADAMARD", "MEASURE", 
            "PRINT", "BARRIER", "EQUAL", "GREATER", "GREATEREQUAL", "LOWER", 
            "LOWEREQUAL", "ASSIGN", "END_OF_STATEMENT", "VAR_STATEMENT", 
            "FOR_STATEMENT", "SEARCH_STATEMENT", "IN_STATEMENT", "WHERE_STATEMENT", 
            "IF_STATEMENT", "ELSE_STATEMENT", "WHILE_STATEMENT", "DO_STATEMENT", 
            "CURLY_PARENTHESIS_OPEN", "CURLY_PARENTHESIS_CLOSE", "ROUND_PARENTHESIS_OPEN", 
            "ROUND_PARENTHESIS_CLOSE", "SQUARE_PARENTHESIS_OPEN", "SQUARE_PARENTHESIS_CLOSE", 
            "DOT", "STRING_ENCLOSURE", "COMMA", "BOOL_LITERAL", "INT_LITERAL", 
            "FLOAT_LITERAL", "HEX_LITERAL", "BIN_LITERAL", "QUBIT_LITERAL", 
            "QUINT_LITERAL", "QUSTRING_LITERAL", "SYMBOL_LITERAL", "STRING_LITERAL", 
            "WS", "NEWLINE" ]

    ruleNames = [ "INT_TYPE", "BOOL_TYPE", "STRING_TYPE", "QUBIT_TYPE", 
                  "QUINT_TYPE", "QUSTRING_TYPE", "FLOAT_TYPE", "VOID_TYPE", 
                  "RETURN", "MULTIPLY", "DIVIDE", "ADD", "SUB", "NOT", "BY", 
                  "SWAP", "PAULIY", "PAULIZ", "GROVER", "MCZ", "MCX", "MCY", 
                  "MCP", "HADAMARD", "MEASURE", "PRINT", "BARRIER", "EQUAL", 
                  "GREATER", "GREATEREQUAL", "LOWER", "LOWEREQUAL", "ASSIGN", 
                  "END_OF_STATEMENT", "VAR_STATEMENT", "FOR_STATEMENT", 
                  "SEARCH_STATEMENT", "IN_STATEMENT", "WHERE_STATEMENT", 
                  "IF_STATEMENT", "ELSE_STATEMENT", "WHILE_STATEMENT", "DO_STATEMENT", 
                  "CURLY_PARENTHESIS_OPEN", "CURLY_PARENTHESIS_CLOSE", "ROUND_PARENTHESIS_OPEN", 
                  "ROUND_PARENTHESIS_CLOSE", "SQUARE_PARENTHESIS_OPEN", 
                  "SQUARE_PARENTHESIS_CLOSE", "DOT", "STRING_ENCLOSURE", 
                  "COMMA", "COMMENT", "TRUE", "FALSE", "DIGIT", "MATH_SIGN", 
                  "QUBIT_STANDARD", "BOOL_LITERAL", "INT_LITERAL", "FLOAT_LITERAL", 
                  "HEX_LITERAL", "BIN_LITERAL", "QUBIT_LITERAL", "QUINT_LITERAL", 
                  "QUSTRING_LITERAL", "SYMBOL_LITERAL", "STRING_LITERAL", 
                  "WS", "NEWLINE" ]

    grammarFileName = "qutes_lexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


