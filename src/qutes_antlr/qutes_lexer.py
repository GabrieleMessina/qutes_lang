# Generated from /workspaces/qutes_lang/specification/grammar/qutes_lexer.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,79,676,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,
        78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,
        84,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,
        2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,
        5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,
        7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,
        12,1,13,1,13,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,16,1,16,1,
        16,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,
        19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,
        21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,24,1,
        24,1,24,1,24,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,
        26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,
        28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,
        30,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,32,1,
        33,1,33,1,34,1,34,1,34,1,35,1,35,1,36,1,36,1,36,1,37,1,37,1,37,1,
        38,1,38,1,38,1,39,1,39,1,40,1,40,1,40,1,41,1,41,1,41,1,42,1,42,1,
        42,1,43,1,43,1,43,1,44,1,44,1,44,1,45,1,45,1,45,1,46,1,46,1,46,1,
        47,1,47,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,
        50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,
        52,1,52,1,53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,55,1,55,1,
        55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,58,1,
        58,1,59,1,59,1,60,1,60,1,61,1,61,1,62,1,62,1,63,1,63,1,64,1,64,1,
        65,1,65,1,66,1,66,1,67,1,67,1,67,1,67,5,67,450,8,67,10,67,12,67,
        453,9,67,1,67,1,67,1,67,1,67,1,67,1,67,5,67,461,8,67,10,67,12,67,
        464,9,67,3,67,466,8,67,1,68,1,68,1,68,1,68,1,68,1,69,1,69,1,69,1,
        69,1,69,1,69,1,70,1,70,1,71,1,71,1,72,1,72,1,72,1,72,1,72,1,72,1,
        72,1,72,1,72,1,72,1,72,1,72,3,72,495,8,72,1,73,1,73,1,73,3,73,500,
        8,73,1,74,3,74,503,8,74,1,74,4,74,506,8,74,11,74,12,74,507,1,75,
        3,75,511,8,75,1,75,4,75,514,8,75,11,75,12,75,515,1,75,1,75,5,75,
        520,8,75,10,75,12,75,523,9,75,1,75,3,75,526,8,75,1,75,1,75,4,75,
        530,8,75,11,75,12,75,531,3,75,534,8,75,1,76,1,76,1,76,1,76,4,76,
        540,8,76,11,76,12,76,541,1,77,1,77,1,77,4,77,547,8,77,11,77,12,77,
        548,1,78,1,78,1,78,3,78,554,8,78,1,78,1,78,5,78,558,8,78,10,78,12,
        78,561,9,78,1,78,1,78,3,78,565,8,78,3,78,567,8,78,1,78,1,78,1,78,
        1,78,1,78,1,78,1,78,1,78,1,78,1,78,3,78,579,8,78,1,78,1,78,3,78,
        583,8,78,1,78,3,78,586,8,78,1,79,1,79,1,79,1,79,1,79,5,79,593,8,
        79,10,79,12,79,596,9,79,1,79,1,79,5,79,600,8,79,10,79,12,79,603,
        9,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,5,79,612,8,79,10,79,12,79,
        615,9,79,1,79,1,79,5,79,619,8,79,10,79,12,79,622,9,79,1,79,1,79,
        1,79,1,79,3,79,628,8,79,1,79,4,79,631,8,79,11,79,12,79,632,1,79,
        1,79,3,79,637,8,79,1,80,1,80,1,80,1,81,1,81,5,81,644,8,81,10,81,
        12,81,647,9,81,1,82,1,82,1,82,1,82,1,82,1,82,5,82,655,8,82,10,82,
        12,82,658,9,82,1,82,1,82,1,83,4,83,663,8,83,11,83,12,83,664,1,83,
        3,83,668,8,83,1,83,1,83,1,84,3,84,673,8,84,1,84,1,84,1,451,0,85,
        1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,
        27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,
        49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,
        71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,
        93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,
        113,57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,131,
        66,133,67,135,0,137,0,139,0,141,0,143,0,145,0,147,68,149,69,151,
        70,153,71,155,72,157,73,159,74,161,75,163,76,165,77,167,78,169,79,
        1,0,33,2,0,73,73,105,105,2,0,78,78,110,110,2,0,84,84,116,116,2,0,
        66,66,98,98,2,0,79,79,111,111,2,0,76,76,108,108,2,0,83,83,115,115,
        2,0,82,82,114,114,2,0,71,71,103,103,2,0,81,81,113,113,2,0,85,85,
        117,117,2,0,70,70,102,102,2,0,65,65,97,97,2,0,86,86,118,118,2,0,
        68,68,100,100,2,0,69,69,101,101,2,0,89,89,121,121,2,0,87,87,119,
        119,2,0,80,80,112,112,2,0,90,90,122,122,2,0,77,77,109,109,2,0,67,
        67,99,99,2,0,88,88,120,120,2,0,72,72,104,104,2,0,10,10,13,13,1,0,
        48,57,2,0,43,43,45,45,2,0,65,70,97,102,1,0,48,49,3,0,65,90,95,95,
        97,122,4,0,48,57,65,90,95,95,97,122,2,0,34,34,92,92,3,0,9,10,13,
        13,32,32,713,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,
        1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,
        1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,
        1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,
        1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,
        1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,
        1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,
        1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,
        1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,
        1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,
        1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,
        0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,
        0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,
        127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,147,1,0,
        0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,
        1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,
        0,167,1,0,0,0,0,169,1,0,0,0,1,171,1,0,0,0,3,175,1,0,0,0,5,180,1,
        0,0,0,7,187,1,0,0,0,9,193,1,0,0,0,11,199,1,0,0,0,13,208,1,0,0,0,
        15,214,1,0,0,0,17,219,1,0,0,0,19,226,1,0,0,0,21,228,1,0,0,0,23,230,
        1,0,0,0,25,232,1,0,0,0,27,234,1,0,0,0,29,236,1,0,0,0,31,240,1,0,
        0,0,33,244,1,0,0,0,35,247,1,0,0,0,37,250,1,0,0,0,39,255,1,0,0,0,
        41,262,1,0,0,0,43,269,1,0,0,0,45,276,1,0,0,0,47,280,1,0,0,0,49,284,
        1,0,0,0,51,288,1,0,0,0,53,292,1,0,0,0,55,301,1,0,0,0,57,309,1,0,
        0,0,59,315,1,0,0,0,61,323,1,0,0,0,63,331,1,0,0,0,65,334,1,0,0,0,
        67,337,1,0,0,0,69,339,1,0,0,0,71,342,1,0,0,0,73,344,1,0,0,0,75,347,
        1,0,0,0,77,350,1,0,0,0,79,353,1,0,0,0,81,355,1,0,0,0,83,358,1,0,
        0,0,85,361,1,0,0,0,87,364,1,0,0,0,89,367,1,0,0,0,91,370,1,0,0,0,
        93,373,1,0,0,0,95,376,1,0,0,0,97,378,1,0,0,0,99,382,1,0,0,0,101,
        386,1,0,0,0,103,394,1,0,0,0,105,401,1,0,0,0,107,404,1,0,0,0,109,
        410,1,0,0,0,111,413,1,0,0,0,113,418,1,0,0,0,115,424,1,0,0,0,117,
        427,1,0,0,0,119,429,1,0,0,0,121,431,1,0,0,0,123,433,1,0,0,0,125,
        435,1,0,0,0,127,437,1,0,0,0,129,439,1,0,0,0,131,441,1,0,0,0,133,
        443,1,0,0,0,135,465,1,0,0,0,137,467,1,0,0,0,139,472,1,0,0,0,141,
        478,1,0,0,0,143,480,1,0,0,0,145,494,1,0,0,0,147,499,1,0,0,0,149,
        502,1,0,0,0,151,533,1,0,0,0,153,535,1,0,0,0,155,543,1,0,0,0,157,
        585,1,0,0,0,159,636,1,0,0,0,161,638,1,0,0,0,163,641,1,0,0,0,165,
        648,1,0,0,0,167,667,1,0,0,0,169,672,1,0,0,0,171,172,7,0,0,0,172,
        173,7,1,0,0,173,174,7,2,0,0,174,2,1,0,0,0,175,176,7,3,0,0,176,177,
        7,4,0,0,177,178,7,4,0,0,178,179,7,5,0,0,179,4,1,0,0,0,180,181,7,
        6,0,0,181,182,7,2,0,0,182,183,7,7,0,0,183,184,7,0,0,0,184,185,7,
        1,0,0,185,186,7,8,0,0,186,6,1,0,0,0,187,188,7,9,0,0,188,189,7,10,
        0,0,189,190,7,3,0,0,190,191,7,0,0,0,191,192,7,2,0,0,192,8,1,0,0,
        0,193,194,7,9,0,0,194,195,7,10,0,0,195,196,7,0,0,0,196,197,7,1,0,
        0,197,198,7,2,0,0,198,10,1,0,0,0,199,200,7,9,0,0,200,201,7,10,0,
        0,201,202,7,6,0,0,202,203,7,2,0,0,203,204,7,7,0,0,204,205,7,0,0,
        0,205,206,7,1,0,0,206,207,7,8,0,0,207,12,1,0,0,0,208,209,7,11,0,
        0,209,210,7,5,0,0,210,211,7,4,0,0,211,212,7,12,0,0,212,213,7,2,0,
        0,213,14,1,0,0,0,214,215,7,13,0,0,215,216,7,4,0,0,216,217,7,0,0,
        0,217,218,7,14,0,0,218,16,1,0,0,0,219,220,7,7,0,0,220,221,7,15,0,
        0,221,222,7,2,0,0,222,223,7,10,0,0,223,224,7,7,0,0,224,225,7,1,0,
        0,225,18,1,0,0,0,226,227,5,42,0,0,227,20,1,0,0,0,228,229,5,47,0,
        0,229,22,1,0,0,0,230,231,5,37,0,0,231,24,1,0,0,0,232,233,5,43,0,
        0,233,26,1,0,0,0,234,235,5,45,0,0,235,28,1,0,0,0,236,237,7,1,0,0,
        237,238,7,4,0,0,238,239,7,2,0,0,239,30,1,0,0,0,240,241,7,12,0,0,
        241,242,7,1,0,0,242,243,7,14,0,0,243,32,1,0,0,0,244,245,7,4,0,0,
        245,246,7,7,0,0,246,34,1,0,0,0,247,248,7,3,0,0,248,249,7,16,0,0,
        249,36,1,0,0,0,250,251,7,6,0,0,251,252,7,17,0,0,252,253,7,12,0,0,
        253,254,7,18,0,0,254,38,1,0,0,0,255,256,7,18,0,0,256,257,7,12,0,
        0,257,258,7,10,0,0,258,259,7,5,0,0,259,260,7,0,0,0,260,261,7,16,
        0,0,261,40,1,0,0,0,262,263,7,18,0,0,263,264,7,12,0,0,264,265,7,10,
        0,0,265,266,7,5,0,0,266,267,7,0,0,0,267,268,7,19,0,0,268,42,1,0,
        0,0,269,270,7,8,0,0,270,271,7,7,0,0,271,272,7,4,0,0,272,273,7,13,
        0,0,273,274,7,15,0,0,274,275,7,7,0,0,275,44,1,0,0,0,276,277,7,20,
        0,0,277,278,7,21,0,0,278,279,7,19,0,0,279,46,1,0,0,0,280,281,7,20,
        0,0,281,282,7,21,0,0,282,283,7,22,0,0,283,48,1,0,0,0,284,285,7,20,
        0,0,285,286,7,21,0,0,286,287,7,16,0,0,287,50,1,0,0,0,288,289,7,20,
        0,0,289,290,7,21,0,0,290,291,7,18,0,0,291,52,1,0,0,0,292,293,7,23,
        0,0,293,294,7,12,0,0,294,295,7,14,0,0,295,296,7,12,0,0,296,297,7,
        20,0,0,297,298,7,12,0,0,298,299,7,7,0,0,299,300,7,14,0,0,300,54,
        1,0,0,0,301,302,7,20,0,0,302,303,7,15,0,0,303,304,7,12,0,0,304,305,
        7,6,0,0,305,306,7,10,0,0,306,307,7,7,0,0,307,308,7,15,0,0,308,56,
        1,0,0,0,309,310,7,18,0,0,310,311,7,7,0,0,311,312,7,0,0,0,312,313,
        7,1,0,0,313,314,7,2,0,0,314,58,1,0,0,0,315,316,7,18,0,0,316,317,
        7,7,0,0,317,318,7,0,0,0,318,319,7,1,0,0,319,320,7,2,0,0,320,321,
        7,5,0,0,321,322,7,1,0,0,322,60,1,0,0,0,323,324,7,3,0,0,324,325,7,
        12,0,0,325,326,7,7,0,0,326,327,7,7,0,0,327,328,7,0,0,0,328,329,7,
        15,0,0,329,330,7,7,0,0,330,62,1,0,0,0,331,332,5,61,0,0,332,333,5,
        61,0,0,333,64,1,0,0,0,334,335,5,33,0,0,335,336,5,61,0,0,336,66,1,
        0,0,0,337,338,5,62,0,0,338,68,1,0,0,0,339,340,5,62,0,0,340,341,5,
        61,0,0,341,70,1,0,0,0,342,343,5,60,0,0,343,72,1,0,0,0,344,345,5,
        60,0,0,345,346,5,61,0,0,346,74,1,0,0,0,347,348,5,60,0,0,348,349,
        5,60,0,0,349,76,1,0,0,0,350,351,5,62,0,0,351,352,5,62,0,0,352,78,
        1,0,0,0,353,354,5,61,0,0,354,80,1,0,0,0,355,356,5,43,0,0,356,357,
        5,43,0,0,357,82,1,0,0,0,358,359,5,45,0,0,359,360,5,45,0,0,360,84,
        1,0,0,0,361,362,5,43,0,0,362,363,5,61,0,0,363,86,1,0,0,0,364,365,
        5,45,0,0,365,366,5,61,0,0,366,88,1,0,0,0,367,368,5,42,0,0,368,369,
        5,61,0,0,369,90,1,0,0,0,370,371,5,47,0,0,371,372,5,61,0,0,372,92,
        1,0,0,0,373,374,5,37,0,0,374,375,5,61,0,0,375,94,1,0,0,0,376,377,
        5,59,0,0,377,96,1,0,0,0,378,379,7,13,0,0,379,380,7,12,0,0,380,381,
        7,7,0,0,381,98,1,0,0,0,382,383,7,11,0,0,383,384,7,4,0,0,384,385,
        7,7,0,0,385,100,1,0,0,0,386,387,7,11,0,0,387,388,7,4,0,0,388,389,
        7,7,0,0,389,390,7,15,0,0,390,391,7,12,0,0,391,392,7,21,0,0,392,393,
        7,23,0,0,393,102,1,0,0,0,394,395,7,6,0,0,395,396,7,15,0,0,396,397,
        7,12,0,0,397,398,7,7,0,0,398,399,7,21,0,0,399,400,7,23,0,0,400,104,
        1,0,0,0,401,402,7,0,0,0,402,403,7,1,0,0,403,106,1,0,0,0,404,405,
        7,17,0,0,405,406,7,23,0,0,406,407,7,15,0,0,407,408,7,7,0,0,408,409,
        7,15,0,0,409,108,1,0,0,0,410,411,7,0,0,0,411,412,7,11,0,0,412,110,
        1,0,0,0,413,414,7,15,0,0,414,415,7,5,0,0,415,416,7,6,0,0,416,417,
        7,15,0,0,417,112,1,0,0,0,418,419,7,17,0,0,419,420,7,23,0,0,420,421,
        7,0,0,0,421,422,7,5,0,0,422,423,7,15,0,0,423,114,1,0,0,0,424,425,
        7,14,0,0,425,426,7,4,0,0,426,116,1,0,0,0,427,428,5,123,0,0,428,118,
        1,0,0,0,429,430,5,125,0,0,430,120,1,0,0,0,431,432,5,40,0,0,432,122,
        1,0,0,0,433,434,5,41,0,0,434,124,1,0,0,0,435,436,5,91,0,0,436,126,
        1,0,0,0,437,438,5,93,0,0,438,128,1,0,0,0,439,440,5,46,0,0,440,130,
        1,0,0,0,441,442,5,34,0,0,442,132,1,0,0,0,443,444,5,44,0,0,444,134,
        1,0,0,0,445,446,5,47,0,0,446,447,5,42,0,0,447,451,1,0,0,0,448,450,
        9,0,0,0,449,448,1,0,0,0,450,453,1,0,0,0,451,452,1,0,0,0,451,449,
        1,0,0,0,452,454,1,0,0,0,453,451,1,0,0,0,454,455,5,42,0,0,455,466,
        5,47,0,0,456,457,5,47,0,0,457,458,5,47,0,0,458,462,1,0,0,0,459,461,
        8,24,0,0,460,459,1,0,0,0,461,464,1,0,0,0,462,460,1,0,0,0,462,463,
        1,0,0,0,463,466,1,0,0,0,464,462,1,0,0,0,465,445,1,0,0,0,465,456,
        1,0,0,0,466,136,1,0,0,0,467,468,7,2,0,0,468,469,7,7,0,0,469,470,
        7,10,0,0,470,471,7,15,0,0,471,138,1,0,0,0,472,473,7,11,0,0,473,474,
        7,12,0,0,474,475,7,5,0,0,475,476,7,6,0,0,476,477,7,15,0,0,477,140,
        1,0,0,0,478,479,7,25,0,0,479,142,1,0,0,0,480,481,7,26,0,0,481,144,
        1,0,0,0,482,483,5,124,0,0,483,484,5,48,0,0,484,495,5,62,0,0,485,
        486,5,124,0,0,486,487,5,49,0,0,487,495,5,62,0,0,488,489,5,124,0,
        0,489,490,5,43,0,0,490,495,5,62,0,0,491,492,5,124,0,0,492,493,5,
        45,0,0,493,495,5,62,0,0,494,482,1,0,0,0,494,485,1,0,0,0,494,488,
        1,0,0,0,494,491,1,0,0,0,495,146,1,0,0,0,496,500,3,137,68,0,497,500,
        3,139,69,0,498,500,2,48,49,0,499,496,1,0,0,0,499,497,1,0,0,0,499,
        498,1,0,0,0,500,148,1,0,0,0,501,503,3,143,71,0,502,501,1,0,0,0,502,
        503,1,0,0,0,503,505,1,0,0,0,504,506,3,141,70,0,505,504,1,0,0,0,506,
        507,1,0,0,0,507,505,1,0,0,0,507,508,1,0,0,0,508,150,1,0,0,0,509,
        511,3,143,71,0,510,509,1,0,0,0,510,511,1,0,0,0,511,513,1,0,0,0,512,
        514,3,141,70,0,513,512,1,0,0,0,514,515,1,0,0,0,515,513,1,0,0,0,515,
        516,1,0,0,0,516,517,1,0,0,0,517,521,5,46,0,0,518,520,3,141,70,0,
        519,518,1,0,0,0,520,523,1,0,0,0,521,519,1,0,0,0,521,522,1,0,0,0,
        522,534,1,0,0,0,523,521,1,0,0,0,524,526,3,143,71,0,525,524,1,0,0,
        0,525,526,1,0,0,0,526,527,1,0,0,0,527,529,5,46,0,0,528,530,3,141,
        70,0,529,528,1,0,0,0,530,531,1,0,0,0,531,529,1,0,0,0,531,532,1,0,
        0,0,532,534,1,0,0,0,533,510,1,0,0,0,533,525,1,0,0,0,534,152,1,0,
        0,0,535,536,5,48,0,0,536,539,7,22,0,0,537,540,7,27,0,0,538,540,3,
        141,70,0,539,537,1,0,0,0,539,538,1,0,0,0,540,541,1,0,0,0,541,539,
        1,0,0,0,541,542,1,0,0,0,542,154,1,0,0,0,543,544,5,48,0,0,544,546,
        7,3,0,0,545,547,7,28,0,0,546,545,1,0,0,0,547,548,1,0,0,0,548,546,
        1,0,0,0,548,549,1,0,0,0,549,156,1,0,0,0,550,553,3,125,62,0,551,554,
        3,147,73,0,552,554,2,48,49,0,553,551,1,0,0,0,553,552,1,0,0,0,554,
        566,1,0,0,0,555,559,3,133,66,0,556,558,5,32,0,0,557,556,1,0,0,0,
        558,561,1,0,0,0,559,557,1,0,0,0,559,560,1,0,0,0,560,564,1,0,0,0,
        561,559,1,0,0,0,562,565,3,147,73,0,563,565,2,48,49,0,564,562,1,0,
        0,0,564,563,1,0,0,0,565,567,1,0,0,0,566,555,1,0,0,0,566,567,1,0,
        0,0,567,568,1,0,0,0,568,569,3,127,63,0,569,570,7,9,0,0,570,586,1,
        0,0,0,571,572,3,151,75,0,572,573,3,133,66,0,573,574,3,151,75,0,574,
        575,7,9,0,0,575,586,1,0,0,0,576,586,3,145,72,0,577,579,3,143,71,
        0,578,577,1,0,0,0,578,579,1,0,0,0,579,582,1,0,0,0,580,583,3,147,
        73,0,581,583,2,48,49,0,582,580,1,0,0,0,582,581,1,0,0,0,583,584,1,
        0,0,0,584,586,7,9,0,0,585,550,1,0,0,0,585,571,1,0,0,0,585,576,1,
        0,0,0,585,578,1,0,0,0,586,158,1,0,0,0,587,637,3,157,78,0,588,589,
        3,125,62,0,589,601,3,157,78,0,590,594,3,133,66,0,591,593,5,32,0,
        0,592,591,1,0,0,0,593,596,1,0,0,0,594,592,1,0,0,0,594,595,1,0,0,
        0,595,597,1,0,0,0,596,594,1,0,0,0,597,598,3,157,78,0,598,600,1,0,
        0,0,599,590,1,0,0,0,600,603,1,0,0,0,601,599,1,0,0,0,601,602,1,0,
        0,0,602,604,1,0,0,0,603,601,1,0,0,0,604,605,3,127,63,0,605,606,7,
        9,0,0,606,637,1,0,0,0,607,608,3,125,62,0,608,620,3,149,74,0,609,
        613,3,133,66,0,610,612,5,32,0,0,611,610,1,0,0,0,612,615,1,0,0,0,
        613,611,1,0,0,0,613,614,1,0,0,0,614,616,1,0,0,0,615,613,1,0,0,0,
        616,617,3,149,74,0,617,619,1,0,0,0,618,609,1,0,0,0,619,622,1,0,0,
        0,620,618,1,0,0,0,620,621,1,0,0,0,621,623,1,0,0,0,622,620,1,0,0,
        0,623,624,3,127,63,0,624,625,7,9,0,0,625,637,1,0,0,0,626,628,3,143,
        71,0,627,626,1,0,0,0,627,628,1,0,0,0,628,630,1,0,0,0,629,631,3,141,
        70,0,630,629,1,0,0,0,631,632,1,0,0,0,632,630,1,0,0,0,632,633,1,0,
        0,0,633,634,1,0,0,0,634,635,7,9,0,0,635,637,1,0,0,0,636,587,1,0,
        0,0,636,588,1,0,0,0,636,607,1,0,0,0,636,627,1,0,0,0,637,160,1,0,
        0,0,638,639,3,165,82,0,639,640,7,9,0,0,640,162,1,0,0,0,641,645,7,
        29,0,0,642,644,7,30,0,0,643,642,1,0,0,0,644,647,1,0,0,0,645,643,
        1,0,0,0,645,646,1,0,0,0,646,164,1,0,0,0,647,645,1,0,0,0,648,656,
        5,34,0,0,649,650,5,92,0,0,650,655,9,0,0,0,651,652,5,34,0,0,652,655,
        5,34,0,0,653,655,8,31,0,0,654,649,1,0,0,0,654,651,1,0,0,0,654,653,
        1,0,0,0,655,658,1,0,0,0,656,654,1,0,0,0,656,657,1,0,0,0,657,659,
        1,0,0,0,658,656,1,0,0,0,659,660,5,34,0,0,660,166,1,0,0,0,661,663,
        7,32,0,0,662,661,1,0,0,0,663,664,1,0,0,0,664,662,1,0,0,0,664,665,
        1,0,0,0,665,668,1,0,0,0,666,668,3,135,67,0,667,662,1,0,0,0,667,666,
        1,0,0,0,668,669,1,0,0,0,669,670,6,83,0,0,670,168,1,0,0,0,671,673,
        5,13,0,0,672,671,1,0,0,0,672,673,1,0,0,0,673,674,1,0,0,0,674,675,
        5,10,0,0,675,170,1,0,0,0,37,0,451,462,465,494,499,502,507,510,515,
        521,525,531,533,539,541,548,553,559,564,566,578,582,585,594,601,
        613,620,627,632,636,645,654,656,664,667,672,1,6,0,0
    ]

class qutes_lexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    INT_TYPE = 1
    BOOL_TYPE = 2
    STRING_TYPE = 3
    QUBIT_TYPE = 4
    QUINT_TYPE = 5
    QUSTRING_TYPE = 6
    FLOAT_TYPE = 7
    VOID_TYPE = 8
    RETURN = 9
    MULTIPLY = 10
    DIVIDE = 11
    MODULE = 12
    ADD = 13
    SUB = 14
    NOT = 15
    AND = 16
    OR = 17
    BY = 18
    SWAP = 19
    PAULIY = 20
    PAULIZ = 21
    GROVER = 22
    MCZ = 23
    MCX = 24
    MCY = 25
    MCP = 26
    HADAMARD = 27
    MEASURE = 28
    PRINT = 29
    PRINT_LN = 30
    BARRIER = 31
    EQUAL = 32
    NOT_EQUAL = 33
    GREATER = 34
    GREATEREQUAL = 35
    LOWER = 36
    LOWEREQUAL = 37
    LSHIFT = 38
    RSHIFT = 39
    ASSIGN = 40
    AUTO_INCREMENT = 41
    AUTO_DECREMENT = 42
    AUTO_SUM = 43
    AUTO_SUB = 44
    AUTO_MULTIPLY = 45
    AUTO_DIVIDE = 46
    AUTO_MODULE = 47
    END_OF_STATEMENT = 48
    VAR_STATEMENT = 49
    FOR_STATEMENT = 50
    FOREACH_STATEMENT = 51
    SEARCH_STATEMENT = 52
    IN_STATEMENT = 53
    WHERE_STATEMENT = 54
    IF_STATEMENT = 55
    ELSE_STATEMENT = 56
    WHILE_STATEMENT = 57
    DO_STATEMENT = 58
    CURLY_PARENTHESIS_OPEN = 59
    CURLY_PARENTHESIS_CLOSE = 60
    ROUND_PARENTHESIS_OPEN = 61
    ROUND_PARENTHESIS_CLOSE = 62
    SQUARE_PARENTHESIS_OPEN = 63
    SQUARE_PARENTHESIS_CLOSE = 64
    DOT = 65
    STRING_ENCLOSURE = 66
    COMMA = 67
    BOOL_LITERAL = 68
    INT_LITERAL = 69
    FLOAT_LITERAL = 70
    HEX_LITERAL = 71
    BIN_LITERAL = 72
    QUBIT_LITERAL = 73
    QUINT_LITERAL = 74
    QUSTRING_LITERAL = 75
    SYMBOL_LITERAL = 76
    STRING_LITERAL = 77
    WS = 78
    NEWLINE = 79

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'int'", "'bool'", "'string'", "'qubit'", "'quint'", "'qustring'", 
            "'float'", "'void'", "'return'", "'*'", "'/'", "'%'", "'+'", 
            "'-'", "'not'", "'and'", "'or'", "'by'", "'swap'", "'pauliy'", 
            "'pauliz'", "'grover'", "'mcz'", "'mcx'", "'mcy'", "'mcp'", 
            "'hadamard'", "'measure'", "'print'", "'println'", "'barrier'", 
            "'=='", "'!='", "'>'", "'>='", "'<'", "'<='", "'<<'", "'>>'", 
            "'='", "'++'", "'--'", "'+='", "'-='", "'*='", "'/='", "'%='", 
            "';'", "'var'", "'for'", "'foreach'", "'search'", "'in'", "'where'", 
            "'if'", "'else'", "'while'", "'do'", "'{'", "'}'", "'('", "')'", 
            "'['", "']'", "'.'", "'\"'", "','" ]

    symbolicNames = [ "<INVALID>",
            "INT_TYPE", "BOOL_TYPE", "STRING_TYPE", "QUBIT_TYPE", "QUINT_TYPE", 
            "QUSTRING_TYPE", "FLOAT_TYPE", "VOID_TYPE", "RETURN", "MULTIPLY", 
            "DIVIDE", "MODULE", "ADD", "SUB", "NOT", "AND", "OR", "BY", 
            "SWAP", "PAULIY", "PAULIZ", "GROVER", "MCZ", "MCX", "MCY", "MCP", 
            "HADAMARD", "MEASURE", "PRINT", "PRINT_LN", "BARRIER", "EQUAL", 
            "NOT_EQUAL", "GREATER", "GREATEREQUAL", "LOWER", "LOWEREQUAL", 
            "LSHIFT", "RSHIFT", "ASSIGN", "AUTO_INCREMENT", "AUTO_DECREMENT", 
            "AUTO_SUM", "AUTO_SUB", "AUTO_MULTIPLY", "AUTO_DIVIDE", "AUTO_MODULE", 
            "END_OF_STATEMENT", "VAR_STATEMENT", "FOR_STATEMENT", "FOREACH_STATEMENT", 
            "SEARCH_STATEMENT", "IN_STATEMENT", "WHERE_STATEMENT", "IF_STATEMENT", 
            "ELSE_STATEMENT", "WHILE_STATEMENT", "DO_STATEMENT", "CURLY_PARENTHESIS_OPEN", 
            "CURLY_PARENTHESIS_CLOSE", "ROUND_PARENTHESIS_OPEN", "ROUND_PARENTHESIS_CLOSE", 
            "SQUARE_PARENTHESIS_OPEN", "SQUARE_PARENTHESIS_CLOSE", "DOT", 
            "STRING_ENCLOSURE", "COMMA", "BOOL_LITERAL", "INT_LITERAL", 
            "FLOAT_LITERAL", "HEX_LITERAL", "BIN_LITERAL", "QUBIT_LITERAL", 
            "QUINT_LITERAL", "QUSTRING_LITERAL", "SYMBOL_LITERAL", "STRING_LITERAL", 
            "WS", "NEWLINE" ]

    ruleNames = [ "INT_TYPE", "BOOL_TYPE", "STRING_TYPE", "QUBIT_TYPE", 
                  "QUINT_TYPE", "QUSTRING_TYPE", "FLOAT_TYPE", "VOID_TYPE", 
                  "RETURN", "MULTIPLY", "DIVIDE", "MODULE", "ADD", "SUB", 
                  "NOT", "AND", "OR", "BY", "SWAP", "PAULIY", "PAULIZ", 
                  "GROVER", "MCZ", "MCX", "MCY", "MCP", "HADAMARD", "MEASURE", 
                  "PRINT", "PRINT_LN", "BARRIER", "EQUAL", "NOT_EQUAL", 
                  "GREATER", "GREATEREQUAL", "LOWER", "LOWEREQUAL", "LSHIFT", 
                  "RSHIFT", "ASSIGN", "AUTO_INCREMENT", "AUTO_DECREMENT", 
                  "AUTO_SUM", "AUTO_SUB", "AUTO_MULTIPLY", "AUTO_DIVIDE", 
                  "AUTO_MODULE", "END_OF_STATEMENT", "VAR_STATEMENT", "FOR_STATEMENT", 
                  "FOREACH_STATEMENT", "SEARCH_STATEMENT", "IN_STATEMENT", 
                  "WHERE_STATEMENT", "IF_STATEMENT", "ELSE_STATEMENT", "WHILE_STATEMENT", 
                  "DO_STATEMENT", "CURLY_PARENTHESIS_OPEN", "CURLY_PARENTHESIS_CLOSE", 
                  "ROUND_PARENTHESIS_OPEN", "ROUND_PARENTHESIS_CLOSE", "SQUARE_PARENTHESIS_OPEN", 
                  "SQUARE_PARENTHESIS_CLOSE", "DOT", "STRING_ENCLOSURE", 
                  "COMMA", "COMMENT", "TRUE", "FALSE", "DIGIT", "MATH_SIGN", 
                  "QUBIT_STANDARD", "BOOL_LITERAL", "INT_LITERAL", "FLOAT_LITERAL", 
                  "HEX_LITERAL", "BIN_LITERAL", "QUBIT_LITERAL", "QUINT_LITERAL", 
                  "QUSTRING_LITERAL", "SYMBOL_LITERAL", "STRING_LITERAL", 
                  "WS", "NEWLINE" ]

    grammarFileName = "qutes_lexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


