# Generated from /workspaces/qutes_lang/specification/grammar/qutes_lexer.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,53,518,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,
        2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,
        5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,
        7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,11,1,
        11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,
        13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,
        16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,
        17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,
        19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,21,1,21,1,22,1,22,1,22,1,
        23,1,23,1,24,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,27,1,27,1,
        28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,
        30,1,31,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,
        36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,1,41,1,41,1,41,1,41,5,
        41,299,8,41,10,41,12,41,302,9,41,1,41,1,41,1,41,1,41,1,41,1,41,5,
        41,310,8,41,10,41,12,41,313,9,41,3,41,315,8,41,1,42,1,42,1,42,1,
        42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,
        46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,3,46,344,8,
        46,1,47,1,47,3,47,348,8,47,1,48,4,48,351,8,48,11,48,12,48,352,1,
        49,3,49,356,8,49,1,49,4,49,359,8,49,11,49,12,49,360,1,49,1,49,5,
        49,365,8,49,10,49,12,49,368,9,49,1,49,3,49,371,8,49,1,49,1,49,4,
        49,375,8,49,11,49,12,49,376,3,49,379,8,49,1,50,1,50,1,50,1,50,4,
        50,385,8,50,11,50,12,50,386,1,51,1,51,1,51,4,51,392,8,51,11,51,12,
        51,393,1,52,1,52,1,52,3,52,399,8,52,1,52,1,52,5,52,403,8,52,10,52,
        12,52,406,9,52,1,52,1,52,3,52,410,8,52,3,52,412,8,52,1,52,1,52,1,
        52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,3,52,424,8,52,1,52,1,52,3,
        52,428,8,52,1,52,3,52,431,8,52,1,53,1,53,1,53,1,53,1,53,5,53,438,
        8,53,10,53,12,53,441,9,53,1,53,1,53,5,53,445,8,53,10,53,12,53,448,
        9,53,1,53,1,53,1,53,1,53,1,53,1,53,5,53,456,8,53,10,53,12,53,459,
        9,53,1,53,1,53,5,53,463,8,53,10,53,12,53,466,9,53,1,53,1,53,1,53,
        1,53,3,53,472,8,53,1,53,4,53,475,8,53,11,53,12,53,476,1,53,1,53,
        3,53,481,8,53,1,54,1,54,1,54,1,55,4,55,487,8,55,11,55,12,55,488,
        1,56,1,56,1,56,1,56,1,56,1,56,5,56,497,8,56,10,56,12,56,500,9,56,
        1,56,1,56,1,57,4,57,505,8,57,11,57,12,57,506,1,57,3,57,510,8,57,
        1,57,1,57,1,58,3,58,515,8,58,1,58,1,58,1,300,0,59,1,1,3,2,5,3,7,
        4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,
        16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,
        27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,
        38,77,39,79,40,81,41,83,0,85,0,87,0,89,0,91,0,93,0,95,42,97,43,99,
        44,101,45,103,46,105,47,107,48,109,49,111,50,113,51,115,52,117,53,
        1,0,32,2,0,73,73,105,105,2,0,78,78,110,110,2,0,84,84,116,116,2,0,
        66,66,98,98,2,0,79,79,111,111,2,0,76,76,108,108,2,0,83,83,115,115,
        2,0,82,82,114,114,2,0,71,71,103,103,2,0,81,81,113,113,2,0,85,85,
        117,117,2,0,70,70,102,102,2,0,65,65,97,97,2,0,86,86,118,118,2,0,
        68,68,100,100,2,0,69,69,101,101,2,0,80,80,112,112,2,0,89,89,121,
        121,2,0,90,90,122,122,2,0,77,77,109,109,2,0,67,67,99,99,2,0,72,72,
        104,104,2,0,87,87,119,119,2,0,10,10,13,13,1,0,48,57,2,0,43,43,45,
        45,2,0,88,88,120,120,2,0,65,70,97,102,1,0,48,49,3,0,48,57,65,90,
        97,122,2,0,34,34,92,92,3,0,9,10,13,13,32,32,553,0,1,1,0,0,0,0,3,
        1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,
        0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,
        0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,
        0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,
        0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,
        0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,
        0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,
        0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,95,1,
        0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,
        1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,
        0,115,1,0,0,0,0,117,1,0,0,0,1,119,1,0,0,0,3,123,1,0,0,0,5,128,1,
        0,0,0,7,135,1,0,0,0,9,141,1,0,0,0,11,147,1,0,0,0,13,156,1,0,0,0,
        15,162,1,0,0,0,17,167,1,0,0,0,19,174,1,0,0,0,21,176,1,0,0,0,23,178,
        1,0,0,0,25,182,1,0,0,0,27,189,1,0,0,0,29,196,1,0,0,0,31,203,1,0,
        0,0,33,207,1,0,0,0,35,216,1,0,0,0,37,224,1,0,0,0,39,230,1,0,0,0,
        41,238,1,0,0,0,43,241,1,0,0,0,45,243,1,0,0,0,47,246,1,0,0,0,49,248,
        1,0,0,0,51,251,1,0,0,0,53,253,1,0,0,0,55,255,1,0,0,0,57,259,1,0,
        0,0,59,262,1,0,0,0,61,267,1,0,0,0,63,273,1,0,0,0,65,276,1,0,0,0,
        67,278,1,0,0,0,69,280,1,0,0,0,71,282,1,0,0,0,73,284,1,0,0,0,75,286,
        1,0,0,0,77,288,1,0,0,0,79,290,1,0,0,0,81,292,1,0,0,0,83,314,1,0,
        0,0,85,316,1,0,0,0,87,321,1,0,0,0,89,327,1,0,0,0,91,329,1,0,0,0,
        93,343,1,0,0,0,95,347,1,0,0,0,97,350,1,0,0,0,99,378,1,0,0,0,101,
        380,1,0,0,0,103,388,1,0,0,0,105,430,1,0,0,0,107,480,1,0,0,0,109,
        482,1,0,0,0,111,486,1,0,0,0,113,490,1,0,0,0,115,509,1,0,0,0,117,
        514,1,0,0,0,119,120,7,0,0,0,120,121,7,1,0,0,121,122,7,2,0,0,122,
        2,1,0,0,0,123,124,7,3,0,0,124,125,7,4,0,0,125,126,7,4,0,0,126,127,
        7,5,0,0,127,4,1,0,0,0,128,129,7,6,0,0,129,130,7,2,0,0,130,131,7,
        7,0,0,131,132,7,0,0,0,132,133,7,1,0,0,133,134,7,8,0,0,134,6,1,0,
        0,0,135,136,7,9,0,0,136,137,7,10,0,0,137,138,7,3,0,0,138,139,7,0,
        0,0,139,140,7,2,0,0,140,8,1,0,0,0,141,142,7,9,0,0,142,143,7,10,0,
        0,143,144,7,0,0,0,144,145,7,1,0,0,145,146,7,2,0,0,146,10,1,0,0,0,
        147,148,7,9,0,0,148,149,7,10,0,0,149,150,7,6,0,0,150,151,7,2,0,0,
        151,152,7,7,0,0,152,153,7,0,0,0,153,154,7,1,0,0,154,155,7,8,0,0,
        155,12,1,0,0,0,156,157,7,11,0,0,157,158,7,5,0,0,158,159,7,4,0,0,
        159,160,7,12,0,0,160,161,7,2,0,0,161,14,1,0,0,0,162,163,7,13,0,0,
        163,164,7,4,0,0,164,165,7,0,0,0,165,166,7,14,0,0,166,16,1,0,0,0,
        167,168,7,7,0,0,168,169,7,15,0,0,169,170,7,2,0,0,170,171,7,10,0,
        0,171,172,7,7,0,0,172,173,7,1,0,0,173,18,1,0,0,0,174,175,5,43,0,
        0,175,20,1,0,0,0,176,177,5,45,0,0,177,22,1,0,0,0,178,179,7,1,0,0,
        179,180,7,4,0,0,180,181,7,2,0,0,181,24,1,0,0,0,182,183,7,16,0,0,
        183,184,7,12,0,0,184,185,7,10,0,0,185,186,7,5,0,0,186,187,7,0,0,
        0,187,188,7,17,0,0,188,26,1,0,0,0,189,190,7,16,0,0,190,191,7,12,
        0,0,191,192,7,10,0,0,192,193,7,5,0,0,193,194,7,0,0,0,194,195,7,18,
        0,0,195,28,1,0,0,0,196,197,7,8,0,0,197,198,7,7,0,0,198,199,7,4,0,
        0,199,200,7,13,0,0,200,201,7,15,0,0,201,202,7,7,0,0,202,30,1,0,0,
        0,203,204,7,19,0,0,204,205,7,20,0,0,205,206,7,18,0,0,206,32,1,0,
        0,0,207,208,7,21,0,0,208,209,7,12,0,0,209,210,7,14,0,0,210,211,7,
        12,0,0,211,212,7,19,0,0,212,213,7,12,0,0,213,214,7,7,0,0,214,215,
        7,14,0,0,215,34,1,0,0,0,216,217,7,19,0,0,217,218,7,15,0,0,218,219,
        7,12,0,0,219,220,7,6,0,0,220,221,7,10,0,0,221,222,7,7,0,0,222,223,
        7,15,0,0,223,36,1,0,0,0,224,225,7,16,0,0,225,226,7,7,0,0,226,227,
        7,0,0,0,227,228,7,1,0,0,228,229,7,2,0,0,229,38,1,0,0,0,230,231,7,
        3,0,0,231,232,7,12,0,0,232,233,7,7,0,0,233,234,7,7,0,0,234,235,7,
        0,0,0,235,236,7,15,0,0,236,237,7,7,0,0,237,40,1,0,0,0,238,239,5,
        61,0,0,239,240,5,61,0,0,240,42,1,0,0,0,241,242,5,62,0,0,242,44,1,
        0,0,0,243,244,5,62,0,0,244,245,5,61,0,0,245,46,1,0,0,0,246,247,5,
        60,0,0,247,48,1,0,0,0,248,249,5,60,0,0,249,250,5,61,0,0,250,50,1,
        0,0,0,251,252,5,61,0,0,252,52,1,0,0,0,253,254,5,59,0,0,254,54,1,
        0,0,0,255,256,7,13,0,0,256,257,7,12,0,0,257,258,7,7,0,0,258,56,1,
        0,0,0,259,260,7,0,0,0,260,261,7,11,0,0,261,58,1,0,0,0,262,263,7,
        15,0,0,263,264,7,5,0,0,264,265,7,6,0,0,265,266,7,15,0,0,266,60,1,
        0,0,0,267,268,7,22,0,0,268,269,7,21,0,0,269,270,7,0,0,0,270,271,
        7,5,0,0,271,272,7,15,0,0,272,62,1,0,0,0,273,274,7,14,0,0,274,275,
        7,4,0,0,275,64,1,0,0,0,276,277,5,123,0,0,277,66,1,0,0,0,278,279,
        5,125,0,0,279,68,1,0,0,0,280,281,5,40,0,0,281,70,1,0,0,0,282,283,
        5,41,0,0,283,72,1,0,0,0,284,285,5,91,0,0,285,74,1,0,0,0,286,287,
        5,93,0,0,287,76,1,0,0,0,288,289,5,46,0,0,289,78,1,0,0,0,290,291,
        5,34,0,0,291,80,1,0,0,0,292,293,5,44,0,0,293,82,1,0,0,0,294,295,
        5,47,0,0,295,296,5,42,0,0,296,300,1,0,0,0,297,299,9,0,0,0,298,297,
        1,0,0,0,299,302,1,0,0,0,300,301,1,0,0,0,300,298,1,0,0,0,301,303,
        1,0,0,0,302,300,1,0,0,0,303,304,5,42,0,0,304,315,5,47,0,0,305,306,
        5,47,0,0,306,307,5,47,0,0,307,311,1,0,0,0,308,310,8,23,0,0,309,308,
        1,0,0,0,310,313,1,0,0,0,311,309,1,0,0,0,311,312,1,0,0,0,312,315,
        1,0,0,0,313,311,1,0,0,0,314,294,1,0,0,0,314,305,1,0,0,0,315,84,1,
        0,0,0,316,317,7,2,0,0,317,318,7,7,0,0,318,319,7,10,0,0,319,320,7,
        15,0,0,320,86,1,0,0,0,321,322,7,11,0,0,322,323,7,12,0,0,323,324,
        7,5,0,0,324,325,7,6,0,0,325,326,7,15,0,0,326,88,1,0,0,0,327,328,
        7,24,0,0,328,90,1,0,0,0,329,330,7,25,0,0,330,92,1,0,0,0,331,332,
        5,124,0,0,332,333,5,48,0,0,333,344,5,62,0,0,334,335,5,124,0,0,335,
        336,5,49,0,0,336,344,5,62,0,0,337,338,5,124,0,0,338,339,5,43,0,0,
        339,344,5,62,0,0,340,341,5,124,0,0,341,342,5,45,0,0,342,344,5,62,
        0,0,343,331,1,0,0,0,343,334,1,0,0,0,343,337,1,0,0,0,343,340,1,0,
        0,0,344,94,1,0,0,0,345,348,3,85,42,0,346,348,3,87,43,0,347,345,1,
        0,0,0,347,346,1,0,0,0,348,96,1,0,0,0,349,351,3,89,44,0,350,349,1,
        0,0,0,351,352,1,0,0,0,352,350,1,0,0,0,352,353,1,0,0,0,353,98,1,0,
        0,0,354,356,3,91,45,0,355,354,1,0,0,0,355,356,1,0,0,0,356,358,1,
        0,0,0,357,359,3,89,44,0,358,357,1,0,0,0,359,360,1,0,0,0,360,358,
        1,0,0,0,360,361,1,0,0,0,361,362,1,0,0,0,362,366,5,46,0,0,363,365,
        3,89,44,0,364,363,1,0,0,0,365,368,1,0,0,0,366,364,1,0,0,0,366,367,
        1,0,0,0,367,379,1,0,0,0,368,366,1,0,0,0,369,371,3,91,45,0,370,369,
        1,0,0,0,370,371,1,0,0,0,371,372,1,0,0,0,372,374,5,46,0,0,373,375,
        3,89,44,0,374,373,1,0,0,0,375,376,1,0,0,0,376,374,1,0,0,0,376,377,
        1,0,0,0,377,379,1,0,0,0,378,355,1,0,0,0,378,370,1,0,0,0,379,100,
        1,0,0,0,380,381,5,48,0,0,381,384,7,26,0,0,382,385,7,27,0,0,383,385,
        3,89,44,0,384,382,1,0,0,0,384,383,1,0,0,0,385,386,1,0,0,0,386,384,
        1,0,0,0,386,387,1,0,0,0,387,102,1,0,0,0,388,389,5,48,0,0,389,391,
        7,3,0,0,390,392,7,28,0,0,391,390,1,0,0,0,392,393,1,0,0,0,393,391,
        1,0,0,0,393,394,1,0,0,0,394,104,1,0,0,0,395,398,3,73,36,0,396,399,
        3,95,47,0,397,399,2,48,49,0,398,396,1,0,0,0,398,397,1,0,0,0,399,
        411,1,0,0,0,400,404,3,81,40,0,401,403,5,32,0,0,402,401,1,0,0,0,403,
        406,1,0,0,0,404,402,1,0,0,0,404,405,1,0,0,0,405,409,1,0,0,0,406,
        404,1,0,0,0,407,410,3,95,47,0,408,410,2,48,49,0,409,407,1,0,0,0,
        409,408,1,0,0,0,410,412,1,0,0,0,411,400,1,0,0,0,411,412,1,0,0,0,
        412,413,1,0,0,0,413,414,3,75,37,0,414,415,7,9,0,0,415,431,1,0,0,
        0,416,417,3,99,49,0,417,418,3,81,40,0,418,419,3,99,49,0,419,420,
        7,9,0,0,420,431,1,0,0,0,421,431,3,93,46,0,422,424,3,91,45,0,423,
        422,1,0,0,0,423,424,1,0,0,0,424,427,1,0,0,0,425,428,3,95,47,0,426,
        428,2,48,49,0,427,425,1,0,0,0,427,426,1,0,0,0,428,429,1,0,0,0,429,
        431,7,9,0,0,430,395,1,0,0,0,430,416,1,0,0,0,430,421,1,0,0,0,430,
        423,1,0,0,0,431,106,1,0,0,0,432,481,3,105,52,0,433,434,3,73,36,0,
        434,446,3,105,52,0,435,439,3,81,40,0,436,438,5,32,0,0,437,436,1,
        0,0,0,438,441,1,0,0,0,439,437,1,0,0,0,439,440,1,0,0,0,440,442,1,
        0,0,0,441,439,1,0,0,0,442,443,3,105,52,0,443,445,1,0,0,0,444,435,
        1,0,0,0,445,448,1,0,0,0,446,444,1,0,0,0,446,447,1,0,0,0,447,449,
        1,0,0,0,448,446,1,0,0,0,449,450,3,75,37,0,450,481,1,0,0,0,451,452,
        3,73,36,0,452,464,3,97,48,0,453,457,3,81,40,0,454,456,5,32,0,0,455,
        454,1,0,0,0,456,459,1,0,0,0,457,455,1,0,0,0,457,458,1,0,0,0,458,
        460,1,0,0,0,459,457,1,0,0,0,460,461,3,97,48,0,461,463,1,0,0,0,462,
        453,1,0,0,0,463,466,1,0,0,0,464,462,1,0,0,0,464,465,1,0,0,0,465,
        467,1,0,0,0,466,464,1,0,0,0,467,468,3,75,37,0,468,469,7,9,0,0,469,
        481,1,0,0,0,470,472,3,91,45,0,471,470,1,0,0,0,471,472,1,0,0,0,472,
        474,1,0,0,0,473,475,3,89,44,0,474,473,1,0,0,0,475,476,1,0,0,0,476,
        474,1,0,0,0,476,477,1,0,0,0,477,478,1,0,0,0,478,479,7,9,0,0,479,
        481,1,0,0,0,480,432,1,0,0,0,480,433,1,0,0,0,480,451,1,0,0,0,480,
        471,1,0,0,0,481,108,1,0,0,0,482,483,3,113,56,0,483,484,7,9,0,0,484,
        110,1,0,0,0,485,487,7,29,0,0,486,485,1,0,0,0,487,488,1,0,0,0,488,
        486,1,0,0,0,488,489,1,0,0,0,489,112,1,0,0,0,490,498,5,34,0,0,491,
        492,5,92,0,0,492,497,9,0,0,0,493,494,5,34,0,0,494,497,5,34,0,0,495,
        497,8,30,0,0,496,491,1,0,0,0,496,493,1,0,0,0,496,495,1,0,0,0,497,
        500,1,0,0,0,498,496,1,0,0,0,498,499,1,0,0,0,499,501,1,0,0,0,500,
        498,1,0,0,0,501,502,5,34,0,0,502,114,1,0,0,0,503,505,7,31,0,0,504,
        503,1,0,0,0,505,506,1,0,0,0,506,504,1,0,0,0,506,507,1,0,0,0,507,
        510,1,0,0,0,508,510,3,83,41,0,509,504,1,0,0,0,509,508,1,0,0,0,510,
        511,1,0,0,0,511,512,6,57,0,0,512,116,1,0,0,0,513,515,5,13,0,0,514,
        513,1,0,0,0,514,515,1,0,0,0,515,516,1,0,0,0,516,517,5,10,0,0,517,
        118,1,0,0,0,36,0,300,311,314,343,347,352,355,360,366,370,376,378,
        384,386,393,398,404,409,411,423,427,430,439,446,457,464,471,476,
        480,488,496,498,506,509,514,1,6,0,0
    ]

class qutes_lexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    INT_TYPE = 1
    BOOL_TYPE = 2
    STRING_TYPE = 3
    QUBIT_TYPE = 4
    QUINT_TYPE = 5
    QUSTRING_TYPE = 6
    FLOAT_TYPE = 7
    VOID_TYPE = 8
    RETURN = 9
    ADD = 10
    SUB = 11
    NOT = 12
    PAULIY = 13
    PAULIZ = 14
    GROVER = 15
    MCZ = 16
    HADAMARD = 17
    MEASURE = 18
    PRINT = 19
    BARRIER = 20
    EQUAL = 21
    GREATER = 22
    GREATEREQUAL = 23
    LOWER = 24
    LOWEREQUAL = 25
    ASSIGN = 26
    END_OF_STATEMENT = 27
    VAR_STATEMENT = 28
    IF_STATEMENT = 29
    ELSE_STATEMENT = 30
    WHILE_STATEMENT = 31
    DO_STATEMENT = 32
    CURLY_PARENTHESIS_OPEN = 33
    CURLY_PARENTHESIS_CLOSE = 34
    ROUND_PARENTHESIS_OPEN = 35
    ROUND_PARENTHESIS_CLOSE = 36
    SQUARE_PARENTHESIS_OPEN = 37
    SQUARE_PARENTHESIS_CLOSE = 38
    DOT = 39
    STRING_ENCLOSURE = 40
    COMMA = 41
    BOOL_LITERAL = 42
    INT_LITERAL = 43
    FLOAT_LITERAL = 44
    HEX_LITERAL = 45
    BIN_LITERAL = 46
    QUBIT_LITERAL = 47
    QUINT_LITERAL = 48
    QUSTRING_LITERAL = 49
    SYMBOL_LITERAL = 50
    STRING_LITERAL = 51
    WS = 52
    NEWLINE = 53

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'int'", "'bool'", "'string'", "'qubit'", "'quint'", "'qustring'", 
            "'float'", "'void'", "'return'", "'+'", "'-'", "'not'", "'pauliy'", 
            "'pauliz'", "'grover'", "'mcz'", "'hadamard'", "'measure'", 
            "'print'", "'barrier'", "'=='", "'>'", "'>='", "'<'", "'<='", 
            "'='", "';'", "'var'", "'if'", "'else'", "'while'", "'do'", 
            "'{'", "'}'", "'('", "')'", "'['", "']'", "'.'", "'\"'", "','" ]

    symbolicNames = [ "<INVALID>",
            "INT_TYPE", "BOOL_TYPE", "STRING_TYPE", "QUBIT_TYPE", "QUINT_TYPE", 
            "QUSTRING_TYPE", "FLOAT_TYPE", "VOID_TYPE", "RETURN", "ADD", 
            "SUB", "NOT", "PAULIY", "PAULIZ", "GROVER", "MCZ", "HADAMARD", 
            "MEASURE", "PRINT", "BARRIER", "EQUAL", "GREATER", "GREATEREQUAL", 
            "LOWER", "LOWEREQUAL", "ASSIGN", "END_OF_STATEMENT", "VAR_STATEMENT", 
            "IF_STATEMENT", "ELSE_STATEMENT", "WHILE_STATEMENT", "DO_STATEMENT", 
            "CURLY_PARENTHESIS_OPEN", "CURLY_PARENTHESIS_CLOSE", "ROUND_PARENTHESIS_OPEN", 
            "ROUND_PARENTHESIS_CLOSE", "SQUARE_PARENTHESIS_OPEN", "SQUARE_PARENTHESIS_CLOSE", 
            "DOT", "STRING_ENCLOSURE", "COMMA", "BOOL_LITERAL", "INT_LITERAL", 
            "FLOAT_LITERAL", "HEX_LITERAL", "BIN_LITERAL", "QUBIT_LITERAL", 
            "QUINT_LITERAL", "QUSTRING_LITERAL", "SYMBOL_LITERAL", "STRING_LITERAL", 
            "WS", "NEWLINE" ]

    ruleNames = [ "INT_TYPE", "BOOL_TYPE", "STRING_TYPE", "QUBIT_TYPE", 
                  "QUINT_TYPE", "QUSTRING_TYPE", "FLOAT_TYPE", "VOID_TYPE", 
                  "RETURN", "ADD", "SUB", "NOT", "PAULIY", "PAULIZ", "GROVER", 
                  "MCZ", "HADAMARD", "MEASURE", "PRINT", "BARRIER", "EQUAL", 
                  "GREATER", "GREATEREQUAL", "LOWER", "LOWEREQUAL", "ASSIGN", 
                  "END_OF_STATEMENT", "VAR_STATEMENT", "IF_STATEMENT", "ELSE_STATEMENT", 
                  "WHILE_STATEMENT", "DO_STATEMENT", "CURLY_PARENTHESIS_OPEN", 
                  "CURLY_PARENTHESIS_CLOSE", "ROUND_PARENTHESIS_OPEN", "ROUND_PARENTHESIS_CLOSE", 
                  "SQUARE_PARENTHESIS_OPEN", "SQUARE_PARENTHESIS_CLOSE", 
                  "DOT", "STRING_ENCLOSURE", "COMMA", "COMMENT", "TRUE", 
                  "FALSE", "DIGIT", "MATH_SIGN", "QUBIT_STANDARD", "BOOL_LITERAL", 
                  "INT_LITERAL", "FLOAT_LITERAL", "HEX_LITERAL", "BIN_LITERAL", 
                  "QUBIT_LITERAL", "QUINT_LITERAL", "QUSTRING_LITERAL", 
                  "SYMBOL_LITERAL", "STRING_LITERAL", "WS", "NEWLINE" ]

    grammarFileName = "qutes_lexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


