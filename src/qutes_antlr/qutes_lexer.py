# Generated from /workspaces/qutes_lang/specification/grammar/qutes_lexer.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,77,656,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,
        78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,1,0,1,0,1,0,1,0,
        1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,
        1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,
        1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,
        1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,
        1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,17,1,17,1,17,
        1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,
        1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,25,
        1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,
        1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,
        1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,31,1,31,
        1,31,1,32,1,32,1,33,1,33,1,33,1,34,1,34,1,35,1,35,1,35,1,36,1,36,
        1,36,1,37,1,37,1,37,1,38,1,38,1,39,1,39,1,39,1,40,1,40,1,40,1,41,
        1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,44,1,45,1,45,
        1,45,1,46,1,46,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,49,1,49,
        1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,
        1,51,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,
        1,54,1,54,1,55,1,55,1,55,1,56,1,56,1,57,1,57,1,58,1,58,1,59,1,59,
        1,60,1,60,1,61,1,61,1,62,1,62,1,63,1,63,1,64,1,64,1,65,1,65,1,65,
        1,65,5,65,430,8,65,10,65,12,65,433,9,65,1,65,1,65,1,65,1,65,1,65,
        1,65,5,65,441,8,65,10,65,12,65,444,9,65,3,65,446,8,65,1,66,1,66,
        1,66,1,66,1,66,1,67,1,67,1,67,1,67,1,67,1,67,1,68,1,68,1,69,1,69,
        1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,70,3,70,
        475,8,70,1,71,1,71,1,71,3,71,480,8,71,1,72,3,72,483,8,72,1,72,4,
        72,486,8,72,11,72,12,72,487,1,73,3,73,491,8,73,1,73,4,73,494,8,73,
        11,73,12,73,495,1,73,1,73,5,73,500,8,73,10,73,12,73,503,9,73,1,73,
        3,73,506,8,73,1,73,1,73,4,73,510,8,73,11,73,12,73,511,3,73,514,8,
        73,1,74,1,74,1,74,1,74,4,74,520,8,74,11,74,12,74,521,1,75,1,75,1,
        75,4,75,527,8,75,11,75,12,75,528,1,76,1,76,1,76,3,76,534,8,76,1,
        76,1,76,5,76,538,8,76,10,76,12,76,541,9,76,1,76,1,76,3,76,545,8,
        76,3,76,547,8,76,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,
        76,3,76,559,8,76,1,76,1,76,3,76,563,8,76,1,76,3,76,566,8,76,1,77,
        1,77,1,77,1,77,1,77,5,77,573,8,77,10,77,12,77,576,9,77,1,77,1,77,
        5,77,580,8,77,10,77,12,77,583,9,77,1,77,1,77,1,77,1,77,1,77,1,77,
        1,77,5,77,592,8,77,10,77,12,77,595,9,77,1,77,1,77,5,77,599,8,77,
        10,77,12,77,602,9,77,1,77,1,77,1,77,1,77,3,77,608,8,77,1,77,4,77,
        611,8,77,11,77,12,77,612,1,77,1,77,3,77,617,8,77,1,78,1,78,1,78,
        1,79,1,79,5,79,624,8,79,10,79,12,79,627,9,79,1,80,1,80,1,80,1,80,
        1,80,1,80,5,80,635,8,80,10,80,12,80,638,9,80,1,80,1,80,1,81,4,81,
        643,8,81,11,81,12,81,644,1,81,3,81,648,8,81,1,81,1,81,1,82,3,82,
        653,8,82,1,82,1,82,1,431,0,83,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,
        17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,
        39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,
        61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,
        83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,
        52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,
        123,62,125,63,127,64,129,65,131,0,133,0,135,0,137,0,139,0,141,0,
        143,66,145,67,147,68,149,69,151,70,153,71,155,72,157,73,159,74,161,
        75,163,76,165,77,1,0,33,2,0,73,73,105,105,2,0,78,78,110,110,2,0,
        84,84,116,116,2,0,66,66,98,98,2,0,79,79,111,111,2,0,76,76,108,108,
        2,0,83,83,115,115,2,0,82,82,114,114,2,0,71,71,103,103,2,0,81,81,
        113,113,2,0,85,85,117,117,2,0,70,70,102,102,2,0,65,65,97,97,2,0,
        86,86,118,118,2,0,68,68,100,100,2,0,69,69,101,101,2,0,89,89,121,
        121,2,0,87,87,119,119,2,0,80,80,112,112,2,0,90,90,122,122,2,0,77,
        77,109,109,2,0,67,67,99,99,2,0,88,88,120,120,2,0,72,72,104,104,2,
        0,10,10,13,13,1,0,48,57,2,0,43,43,45,45,2,0,65,70,97,102,1,0,48,
        49,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,2,0,34,34,
        92,92,3,0,9,10,13,13,32,32,693,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,
        0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,
        0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,
        0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,
        0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,
        0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,
        0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,
        0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,
        0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,
        0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,
        0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,
        0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,
        1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,
        0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,143,1,0,0,0,0,145,1,
        0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,
        155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,
        0,0,0,165,1,0,0,0,1,167,1,0,0,0,3,171,1,0,0,0,5,176,1,0,0,0,7,183,
        1,0,0,0,9,189,1,0,0,0,11,195,1,0,0,0,13,204,1,0,0,0,15,210,1,0,0,
        0,17,215,1,0,0,0,19,222,1,0,0,0,21,224,1,0,0,0,23,226,1,0,0,0,25,
        228,1,0,0,0,27,230,1,0,0,0,29,232,1,0,0,0,31,236,1,0,0,0,33,240,
        1,0,0,0,35,243,1,0,0,0,37,246,1,0,0,0,39,251,1,0,0,0,41,258,1,0,
        0,0,43,265,1,0,0,0,45,272,1,0,0,0,47,276,1,0,0,0,49,280,1,0,0,0,
        51,284,1,0,0,0,53,288,1,0,0,0,55,297,1,0,0,0,57,305,1,0,0,0,59,311,
        1,0,0,0,61,319,1,0,0,0,63,322,1,0,0,0,65,325,1,0,0,0,67,327,1,0,
        0,0,69,330,1,0,0,0,71,332,1,0,0,0,73,335,1,0,0,0,75,338,1,0,0,0,
        77,341,1,0,0,0,79,343,1,0,0,0,81,346,1,0,0,0,83,349,1,0,0,0,85,352,
        1,0,0,0,87,355,1,0,0,0,89,358,1,0,0,0,91,361,1,0,0,0,93,364,1,0,
        0,0,95,366,1,0,0,0,97,370,1,0,0,0,99,374,1,0,0,0,101,381,1,0,0,0,
        103,384,1,0,0,0,105,390,1,0,0,0,107,393,1,0,0,0,109,398,1,0,0,0,
        111,404,1,0,0,0,113,407,1,0,0,0,115,409,1,0,0,0,117,411,1,0,0,0,
        119,413,1,0,0,0,121,415,1,0,0,0,123,417,1,0,0,0,125,419,1,0,0,0,
        127,421,1,0,0,0,129,423,1,0,0,0,131,445,1,0,0,0,133,447,1,0,0,0,
        135,452,1,0,0,0,137,458,1,0,0,0,139,460,1,0,0,0,141,474,1,0,0,0,
        143,479,1,0,0,0,145,482,1,0,0,0,147,513,1,0,0,0,149,515,1,0,0,0,
        151,523,1,0,0,0,153,565,1,0,0,0,155,616,1,0,0,0,157,618,1,0,0,0,
        159,621,1,0,0,0,161,628,1,0,0,0,163,647,1,0,0,0,165,652,1,0,0,0,
        167,168,7,0,0,0,168,169,7,1,0,0,169,170,7,2,0,0,170,2,1,0,0,0,171,
        172,7,3,0,0,172,173,7,4,0,0,173,174,7,4,0,0,174,175,7,5,0,0,175,
        4,1,0,0,0,176,177,7,6,0,0,177,178,7,2,0,0,178,179,7,7,0,0,179,180,
        7,0,0,0,180,181,7,1,0,0,181,182,7,8,0,0,182,6,1,0,0,0,183,184,7,
        9,0,0,184,185,7,10,0,0,185,186,7,3,0,0,186,187,7,0,0,0,187,188,7,
        2,0,0,188,8,1,0,0,0,189,190,7,9,0,0,190,191,7,10,0,0,191,192,7,0,
        0,0,192,193,7,1,0,0,193,194,7,2,0,0,194,10,1,0,0,0,195,196,7,9,0,
        0,196,197,7,10,0,0,197,198,7,6,0,0,198,199,7,2,0,0,199,200,7,7,0,
        0,200,201,7,0,0,0,201,202,7,1,0,0,202,203,7,8,0,0,203,12,1,0,0,0,
        204,205,7,11,0,0,205,206,7,5,0,0,206,207,7,4,0,0,207,208,7,12,0,
        0,208,209,7,2,0,0,209,14,1,0,0,0,210,211,7,13,0,0,211,212,7,4,0,
        0,212,213,7,0,0,0,213,214,7,14,0,0,214,16,1,0,0,0,215,216,7,7,0,
        0,216,217,7,15,0,0,217,218,7,2,0,0,218,219,7,10,0,0,219,220,7,7,
        0,0,220,221,7,1,0,0,221,18,1,0,0,0,222,223,5,42,0,0,223,20,1,0,0,
        0,224,225,5,47,0,0,225,22,1,0,0,0,226,227,5,37,0,0,227,24,1,0,0,
        0,228,229,5,43,0,0,229,26,1,0,0,0,230,231,5,45,0,0,231,28,1,0,0,
        0,232,233,7,1,0,0,233,234,7,4,0,0,234,235,7,2,0,0,235,30,1,0,0,0,
        236,237,7,12,0,0,237,238,7,1,0,0,238,239,7,14,0,0,239,32,1,0,0,0,
        240,241,7,4,0,0,241,242,7,7,0,0,242,34,1,0,0,0,243,244,7,3,0,0,244,
        245,7,16,0,0,245,36,1,0,0,0,246,247,7,6,0,0,247,248,7,17,0,0,248,
        249,7,12,0,0,249,250,7,18,0,0,250,38,1,0,0,0,251,252,7,18,0,0,252,
        253,7,12,0,0,253,254,7,10,0,0,254,255,7,5,0,0,255,256,7,0,0,0,256,
        257,7,16,0,0,257,40,1,0,0,0,258,259,7,18,0,0,259,260,7,12,0,0,260,
        261,7,10,0,0,261,262,7,5,0,0,262,263,7,0,0,0,263,264,7,19,0,0,264,
        42,1,0,0,0,265,266,7,8,0,0,266,267,7,7,0,0,267,268,7,4,0,0,268,269,
        7,13,0,0,269,270,7,15,0,0,270,271,7,7,0,0,271,44,1,0,0,0,272,273,
        7,20,0,0,273,274,7,21,0,0,274,275,7,19,0,0,275,46,1,0,0,0,276,277,
        7,20,0,0,277,278,7,21,0,0,278,279,7,22,0,0,279,48,1,0,0,0,280,281,
        7,20,0,0,281,282,7,21,0,0,282,283,7,16,0,0,283,50,1,0,0,0,284,285,
        7,20,0,0,285,286,7,21,0,0,286,287,7,18,0,0,287,52,1,0,0,0,288,289,
        7,23,0,0,289,290,7,12,0,0,290,291,7,14,0,0,291,292,7,12,0,0,292,
        293,7,20,0,0,293,294,7,12,0,0,294,295,7,7,0,0,295,296,7,14,0,0,296,
        54,1,0,0,0,297,298,7,20,0,0,298,299,7,15,0,0,299,300,7,12,0,0,300,
        301,7,6,0,0,301,302,7,10,0,0,302,303,7,7,0,0,303,304,7,15,0,0,304,
        56,1,0,0,0,305,306,7,18,0,0,306,307,7,7,0,0,307,308,7,0,0,0,308,
        309,7,1,0,0,309,310,7,2,0,0,310,58,1,0,0,0,311,312,7,3,0,0,312,313,
        7,12,0,0,313,314,7,7,0,0,314,315,7,7,0,0,315,316,7,0,0,0,316,317,
        7,15,0,0,317,318,7,7,0,0,318,60,1,0,0,0,319,320,5,61,0,0,320,321,
        5,61,0,0,321,62,1,0,0,0,322,323,5,33,0,0,323,324,5,61,0,0,324,64,
        1,0,0,0,325,326,5,62,0,0,326,66,1,0,0,0,327,328,5,62,0,0,328,329,
        5,61,0,0,329,68,1,0,0,0,330,331,5,60,0,0,331,70,1,0,0,0,332,333,
        5,60,0,0,333,334,5,61,0,0,334,72,1,0,0,0,335,336,5,60,0,0,336,337,
        5,60,0,0,337,74,1,0,0,0,338,339,5,62,0,0,339,340,5,62,0,0,340,76,
        1,0,0,0,341,342,5,61,0,0,342,78,1,0,0,0,343,344,5,43,0,0,344,345,
        5,43,0,0,345,80,1,0,0,0,346,347,5,45,0,0,347,348,5,45,0,0,348,82,
        1,0,0,0,349,350,5,43,0,0,350,351,5,61,0,0,351,84,1,0,0,0,352,353,
        5,45,0,0,353,354,5,61,0,0,354,86,1,0,0,0,355,356,5,42,0,0,356,357,
        5,61,0,0,357,88,1,0,0,0,358,359,5,47,0,0,359,360,5,61,0,0,360,90,
        1,0,0,0,361,362,5,37,0,0,362,363,5,61,0,0,363,92,1,0,0,0,364,365,
        5,59,0,0,365,94,1,0,0,0,366,367,7,13,0,0,367,368,7,12,0,0,368,369,
        7,7,0,0,369,96,1,0,0,0,370,371,7,11,0,0,371,372,7,4,0,0,372,373,
        7,7,0,0,373,98,1,0,0,0,374,375,7,6,0,0,375,376,7,15,0,0,376,377,
        7,12,0,0,377,378,7,7,0,0,378,379,7,21,0,0,379,380,7,23,0,0,380,100,
        1,0,0,0,381,382,7,0,0,0,382,383,7,1,0,0,383,102,1,0,0,0,384,385,
        7,17,0,0,385,386,7,23,0,0,386,387,7,15,0,0,387,388,7,7,0,0,388,389,
        7,15,0,0,389,104,1,0,0,0,390,391,7,0,0,0,391,392,7,11,0,0,392,106,
        1,0,0,0,393,394,7,15,0,0,394,395,7,5,0,0,395,396,7,6,0,0,396,397,
        7,15,0,0,397,108,1,0,0,0,398,399,7,17,0,0,399,400,7,23,0,0,400,401,
        7,0,0,0,401,402,7,5,0,0,402,403,7,15,0,0,403,110,1,0,0,0,404,405,
        7,14,0,0,405,406,7,4,0,0,406,112,1,0,0,0,407,408,5,123,0,0,408,114,
        1,0,0,0,409,410,5,125,0,0,410,116,1,0,0,0,411,412,5,40,0,0,412,118,
        1,0,0,0,413,414,5,41,0,0,414,120,1,0,0,0,415,416,5,91,0,0,416,122,
        1,0,0,0,417,418,5,93,0,0,418,124,1,0,0,0,419,420,5,46,0,0,420,126,
        1,0,0,0,421,422,5,34,0,0,422,128,1,0,0,0,423,424,5,44,0,0,424,130,
        1,0,0,0,425,426,5,47,0,0,426,427,5,42,0,0,427,431,1,0,0,0,428,430,
        9,0,0,0,429,428,1,0,0,0,430,433,1,0,0,0,431,432,1,0,0,0,431,429,
        1,0,0,0,432,434,1,0,0,0,433,431,1,0,0,0,434,435,5,42,0,0,435,446,
        5,47,0,0,436,437,5,47,0,0,437,438,5,47,0,0,438,442,1,0,0,0,439,441,
        8,24,0,0,440,439,1,0,0,0,441,444,1,0,0,0,442,440,1,0,0,0,442,443,
        1,0,0,0,443,446,1,0,0,0,444,442,1,0,0,0,445,425,1,0,0,0,445,436,
        1,0,0,0,446,132,1,0,0,0,447,448,7,2,0,0,448,449,7,7,0,0,449,450,
        7,10,0,0,450,451,7,15,0,0,451,134,1,0,0,0,452,453,7,11,0,0,453,454,
        7,12,0,0,454,455,7,5,0,0,455,456,7,6,0,0,456,457,7,15,0,0,457,136,
        1,0,0,0,458,459,7,25,0,0,459,138,1,0,0,0,460,461,7,26,0,0,461,140,
        1,0,0,0,462,463,5,124,0,0,463,464,5,48,0,0,464,475,5,62,0,0,465,
        466,5,124,0,0,466,467,5,49,0,0,467,475,5,62,0,0,468,469,5,124,0,
        0,469,470,5,43,0,0,470,475,5,62,0,0,471,472,5,124,0,0,472,473,5,
        45,0,0,473,475,5,62,0,0,474,462,1,0,0,0,474,465,1,0,0,0,474,468,
        1,0,0,0,474,471,1,0,0,0,475,142,1,0,0,0,476,480,3,133,66,0,477,480,
        3,135,67,0,478,480,2,48,49,0,479,476,1,0,0,0,479,477,1,0,0,0,479,
        478,1,0,0,0,480,144,1,0,0,0,481,483,3,139,69,0,482,481,1,0,0,0,482,
        483,1,0,0,0,483,485,1,0,0,0,484,486,3,137,68,0,485,484,1,0,0,0,486,
        487,1,0,0,0,487,485,1,0,0,0,487,488,1,0,0,0,488,146,1,0,0,0,489,
        491,3,139,69,0,490,489,1,0,0,0,490,491,1,0,0,0,491,493,1,0,0,0,492,
        494,3,137,68,0,493,492,1,0,0,0,494,495,1,0,0,0,495,493,1,0,0,0,495,
        496,1,0,0,0,496,497,1,0,0,0,497,501,5,46,0,0,498,500,3,137,68,0,
        499,498,1,0,0,0,500,503,1,0,0,0,501,499,1,0,0,0,501,502,1,0,0,0,
        502,514,1,0,0,0,503,501,1,0,0,0,504,506,3,139,69,0,505,504,1,0,0,
        0,505,506,1,0,0,0,506,507,1,0,0,0,507,509,5,46,0,0,508,510,3,137,
        68,0,509,508,1,0,0,0,510,511,1,0,0,0,511,509,1,0,0,0,511,512,1,0,
        0,0,512,514,1,0,0,0,513,490,1,0,0,0,513,505,1,0,0,0,514,148,1,0,
        0,0,515,516,5,48,0,0,516,519,7,22,0,0,517,520,7,27,0,0,518,520,3,
        137,68,0,519,517,1,0,0,0,519,518,1,0,0,0,520,521,1,0,0,0,521,519,
        1,0,0,0,521,522,1,0,0,0,522,150,1,0,0,0,523,524,5,48,0,0,524,526,
        7,3,0,0,525,527,7,28,0,0,526,525,1,0,0,0,527,528,1,0,0,0,528,526,
        1,0,0,0,528,529,1,0,0,0,529,152,1,0,0,0,530,533,3,121,60,0,531,534,
        3,143,71,0,532,534,2,48,49,0,533,531,1,0,0,0,533,532,1,0,0,0,534,
        546,1,0,0,0,535,539,3,129,64,0,536,538,5,32,0,0,537,536,1,0,0,0,
        538,541,1,0,0,0,539,537,1,0,0,0,539,540,1,0,0,0,540,544,1,0,0,0,
        541,539,1,0,0,0,542,545,3,143,71,0,543,545,2,48,49,0,544,542,1,0,
        0,0,544,543,1,0,0,0,545,547,1,0,0,0,546,535,1,0,0,0,546,547,1,0,
        0,0,547,548,1,0,0,0,548,549,3,123,61,0,549,550,7,9,0,0,550,566,1,
        0,0,0,551,552,3,147,73,0,552,553,3,129,64,0,553,554,3,147,73,0,554,
        555,7,9,0,0,555,566,1,0,0,0,556,566,3,141,70,0,557,559,3,139,69,
        0,558,557,1,0,0,0,558,559,1,0,0,0,559,562,1,0,0,0,560,563,3,143,
        71,0,561,563,2,48,49,0,562,560,1,0,0,0,562,561,1,0,0,0,563,564,1,
        0,0,0,564,566,7,9,0,0,565,530,1,0,0,0,565,551,1,0,0,0,565,556,1,
        0,0,0,565,558,1,0,0,0,566,154,1,0,0,0,567,617,3,153,76,0,568,569,
        3,121,60,0,569,581,3,153,76,0,570,574,3,129,64,0,571,573,5,32,0,
        0,572,571,1,0,0,0,573,576,1,0,0,0,574,572,1,0,0,0,574,575,1,0,0,
        0,575,577,1,0,0,0,576,574,1,0,0,0,577,578,3,153,76,0,578,580,1,0,
        0,0,579,570,1,0,0,0,580,583,1,0,0,0,581,579,1,0,0,0,581,582,1,0,
        0,0,582,584,1,0,0,0,583,581,1,0,0,0,584,585,3,123,61,0,585,586,7,
        9,0,0,586,617,1,0,0,0,587,588,3,121,60,0,588,600,3,145,72,0,589,
        593,3,129,64,0,590,592,5,32,0,0,591,590,1,0,0,0,592,595,1,0,0,0,
        593,591,1,0,0,0,593,594,1,0,0,0,594,596,1,0,0,0,595,593,1,0,0,0,
        596,597,3,145,72,0,597,599,1,0,0,0,598,589,1,0,0,0,599,602,1,0,0,
        0,600,598,1,0,0,0,600,601,1,0,0,0,601,603,1,0,0,0,602,600,1,0,0,
        0,603,604,3,123,61,0,604,605,7,9,0,0,605,617,1,0,0,0,606,608,3,139,
        69,0,607,606,1,0,0,0,607,608,1,0,0,0,608,610,1,0,0,0,609,611,3,137,
        68,0,610,609,1,0,0,0,611,612,1,0,0,0,612,610,1,0,0,0,612,613,1,0,
        0,0,613,614,1,0,0,0,614,615,7,9,0,0,615,617,1,0,0,0,616,567,1,0,
        0,0,616,568,1,0,0,0,616,587,1,0,0,0,616,607,1,0,0,0,617,156,1,0,
        0,0,618,619,3,161,80,0,619,620,7,9,0,0,620,158,1,0,0,0,621,625,7,
        29,0,0,622,624,7,30,0,0,623,622,1,0,0,0,624,627,1,0,0,0,625,623,
        1,0,0,0,625,626,1,0,0,0,626,160,1,0,0,0,627,625,1,0,0,0,628,636,
        5,34,0,0,629,630,5,92,0,0,630,635,9,0,0,0,631,632,5,34,0,0,632,635,
        5,34,0,0,633,635,8,31,0,0,634,629,1,0,0,0,634,631,1,0,0,0,634,633,
        1,0,0,0,635,638,1,0,0,0,636,634,1,0,0,0,636,637,1,0,0,0,637,639,
        1,0,0,0,638,636,1,0,0,0,639,640,5,34,0,0,640,162,1,0,0,0,641,643,
        7,32,0,0,642,641,1,0,0,0,643,644,1,0,0,0,644,642,1,0,0,0,644,645,
        1,0,0,0,645,648,1,0,0,0,646,648,3,131,65,0,647,642,1,0,0,0,647,646,
        1,0,0,0,648,649,1,0,0,0,649,650,6,81,0,0,650,164,1,0,0,0,651,653,
        5,13,0,0,652,651,1,0,0,0,652,653,1,0,0,0,653,654,1,0,0,0,654,655,
        5,10,0,0,655,166,1,0,0,0,37,0,431,442,445,474,479,482,487,490,495,
        501,505,511,513,519,521,528,533,539,544,546,558,562,565,574,581,
        593,600,607,612,616,625,634,636,644,647,652,1,6,0,0
    ]

class qutes_lexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    INT_TYPE = 1
    BOOL_TYPE = 2
    STRING_TYPE = 3
    QUBIT_TYPE = 4
    QUINT_TYPE = 5
    QUSTRING_TYPE = 6
    FLOAT_TYPE = 7
    VOID_TYPE = 8
    RETURN = 9
    MULTIPLY = 10
    DIVIDE = 11
    MODULE = 12
    ADD = 13
    SUB = 14
    NOT = 15
    AND = 16
    OR = 17
    BY = 18
    SWAP = 19
    PAULIY = 20
    PAULIZ = 21
    GROVER = 22
    MCZ = 23
    MCX = 24
    MCY = 25
    MCP = 26
    HADAMARD = 27
    MEASURE = 28
    PRINT = 29
    BARRIER = 30
    EQUAL = 31
    NOT_EQUAL = 32
    GREATER = 33
    GREATEREQUAL = 34
    LOWER = 35
    LOWEREQUAL = 36
    LSHIFT = 37
    RSHIFT = 38
    ASSIGN = 39
    AUTO_INCREMENT = 40
    AUTO_DECREMENT = 41
    AUTO_SUM = 42
    AUTO_SUB = 43
    AUTO_MULTIPLY = 44
    AUTO_DIVIDE = 45
    AUTO_MODULE = 46
    END_OF_STATEMENT = 47
    VAR_STATEMENT = 48
    FOR_STATEMENT = 49
    SEARCH_STATEMENT = 50
    IN_STATEMENT = 51
    WHERE_STATEMENT = 52
    IF_STATEMENT = 53
    ELSE_STATEMENT = 54
    WHILE_STATEMENT = 55
    DO_STATEMENT = 56
    CURLY_PARENTHESIS_OPEN = 57
    CURLY_PARENTHESIS_CLOSE = 58
    ROUND_PARENTHESIS_OPEN = 59
    ROUND_PARENTHESIS_CLOSE = 60
    SQUARE_PARENTHESIS_OPEN = 61
    SQUARE_PARENTHESIS_CLOSE = 62
    DOT = 63
    STRING_ENCLOSURE = 64
    COMMA = 65
    BOOL_LITERAL = 66
    INT_LITERAL = 67
    FLOAT_LITERAL = 68
    HEX_LITERAL = 69
    BIN_LITERAL = 70
    QUBIT_LITERAL = 71
    QUINT_LITERAL = 72
    QUSTRING_LITERAL = 73
    SYMBOL_LITERAL = 74
    STRING_LITERAL = 75
    WS = 76
    NEWLINE = 77

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'int'", "'bool'", "'string'", "'qubit'", "'quint'", "'qustring'", 
            "'float'", "'void'", "'return'", "'*'", "'/'", "'%'", "'+'", 
            "'-'", "'not'", "'and'", "'or'", "'by'", "'swap'", "'pauliy'", 
            "'pauliz'", "'grover'", "'mcz'", "'mcx'", "'mcy'", "'mcp'", 
            "'hadamard'", "'measure'", "'print'", "'barrier'", "'=='", "'!='", 
            "'>'", "'>='", "'<'", "'<='", "'<<'", "'>>'", "'='", "'++'", 
            "'--'", "'+='", "'-='", "'*='", "'/='", "'%='", "';'", "'var'", 
            "'for'", "'search'", "'in'", "'where'", "'if'", "'else'", "'while'", 
            "'do'", "'{'", "'}'", "'('", "')'", "'['", "']'", "'.'", "'\"'", 
            "','" ]

    symbolicNames = [ "<INVALID>",
            "INT_TYPE", "BOOL_TYPE", "STRING_TYPE", "QUBIT_TYPE", "QUINT_TYPE", 
            "QUSTRING_TYPE", "FLOAT_TYPE", "VOID_TYPE", "RETURN", "MULTIPLY", 
            "DIVIDE", "MODULE", "ADD", "SUB", "NOT", "AND", "OR", "BY", 
            "SWAP", "PAULIY", "PAULIZ", "GROVER", "MCZ", "MCX", "MCY", "MCP", 
            "HADAMARD", "MEASURE", "PRINT", "BARRIER", "EQUAL", "NOT_EQUAL", 
            "GREATER", "GREATEREQUAL", "LOWER", "LOWEREQUAL", "LSHIFT", 
            "RSHIFT", "ASSIGN", "AUTO_INCREMENT", "AUTO_DECREMENT", "AUTO_SUM", 
            "AUTO_SUB", "AUTO_MULTIPLY", "AUTO_DIVIDE", "AUTO_MODULE", "END_OF_STATEMENT", 
            "VAR_STATEMENT", "FOR_STATEMENT", "SEARCH_STATEMENT", "IN_STATEMENT", 
            "WHERE_STATEMENT", "IF_STATEMENT", "ELSE_STATEMENT", "WHILE_STATEMENT", 
            "DO_STATEMENT", "CURLY_PARENTHESIS_OPEN", "CURLY_PARENTHESIS_CLOSE", 
            "ROUND_PARENTHESIS_OPEN", "ROUND_PARENTHESIS_CLOSE", "SQUARE_PARENTHESIS_OPEN", 
            "SQUARE_PARENTHESIS_CLOSE", "DOT", "STRING_ENCLOSURE", "COMMA", 
            "BOOL_LITERAL", "INT_LITERAL", "FLOAT_LITERAL", "HEX_LITERAL", 
            "BIN_LITERAL", "QUBIT_LITERAL", "QUINT_LITERAL", "QUSTRING_LITERAL", 
            "SYMBOL_LITERAL", "STRING_LITERAL", "WS", "NEWLINE" ]

    ruleNames = [ "INT_TYPE", "BOOL_TYPE", "STRING_TYPE", "QUBIT_TYPE", 
                  "QUINT_TYPE", "QUSTRING_TYPE", "FLOAT_TYPE", "VOID_TYPE", 
                  "RETURN", "MULTIPLY", "DIVIDE", "MODULE", "ADD", "SUB", 
                  "NOT", "AND", "OR", "BY", "SWAP", "PAULIY", "PAULIZ", 
                  "GROVER", "MCZ", "MCX", "MCY", "MCP", "HADAMARD", "MEASURE", 
                  "PRINT", "BARRIER", "EQUAL", "NOT_EQUAL", "GREATER", "GREATEREQUAL", 
                  "LOWER", "LOWEREQUAL", "LSHIFT", "RSHIFT", "ASSIGN", "AUTO_INCREMENT", 
                  "AUTO_DECREMENT", "AUTO_SUM", "AUTO_SUB", "AUTO_MULTIPLY", 
                  "AUTO_DIVIDE", "AUTO_MODULE", "END_OF_STATEMENT", "VAR_STATEMENT", 
                  "FOR_STATEMENT", "SEARCH_STATEMENT", "IN_STATEMENT", "WHERE_STATEMENT", 
                  "IF_STATEMENT", "ELSE_STATEMENT", "WHILE_STATEMENT", "DO_STATEMENT", 
                  "CURLY_PARENTHESIS_OPEN", "CURLY_PARENTHESIS_CLOSE", "ROUND_PARENTHESIS_OPEN", 
                  "ROUND_PARENTHESIS_CLOSE", "SQUARE_PARENTHESIS_OPEN", 
                  "SQUARE_PARENTHESIS_CLOSE", "DOT", "STRING_ENCLOSURE", 
                  "COMMA", "COMMENT", "TRUE", "FALSE", "DIGIT", "MATH_SIGN", 
                  "QUBIT_STANDARD", "BOOL_LITERAL", "INT_LITERAL", "FLOAT_LITERAL", 
                  "HEX_LITERAL", "BIN_LITERAL", "QUBIT_LITERAL", "QUINT_LITERAL", 
                  "QUSTRING_LITERAL", "SYMBOL_LITERAL", "STRING_LITERAL", 
                  "WS", "NEWLINE" ]

    grammarFileName = "qutes_lexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


